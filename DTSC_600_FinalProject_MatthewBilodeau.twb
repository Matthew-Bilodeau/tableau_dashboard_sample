<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='stroke-color' value='#ffffff' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='All States' />
        </aliases>
        <members>
          <member alias='All States' value='&quot;All&quot;' />
          <member value='&quot;Alabama&quot;' />
          <member value='&quot;Arizona&quot;' />
          <member value='&quot;Arkansas&quot;' />
          <member value='&quot;California&quot;' />
          <member value='&quot;Colorado&quot;' />
          <member value='&quot;Connecticut&quot;' />
          <member value='&quot;District of Columbia&quot;' />
          <member value='&quot;Florida&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Hawaii&quot;' />
          <member value='&quot;Idaho&quot;' />
          <member value='&quot;Illinois&quot;' />
          <member value='&quot;Indiana&quot;' />
          <member value='&quot;Iowa&quot;' />
          <member value='&quot;Kansas&quot;' />
          <member value='&quot;Kentucky&quot;' />
          <member value='&quot;Louisiana&quot;' />
          <member value='&quot;Maryland&quot;' />
          <member value='&quot;Massachusetts&quot;' />
          <member value='&quot;Michigan&quot;' />
          <member value='&quot;Minnesota&quot;' />
          <member value='&quot;Mississippi&quot;' />
          <member value='&quot;Missouri&quot;' />
          <member value='&quot;Montana&quot;' />
          <member value='&quot;Nebraska&quot;' />
          <member value='&quot;Nevada&quot;' />
          <member value='&quot;New Hampshire&quot;' />
          <member value='&quot;New Jersey&quot;' />
          <member value='&quot;New Mexico&quot;' />
          <member value='&quot;New York&quot;' />
          <member value='&quot;North Carolina&quot;' />
          <member value='&quot;North Dakota&quot;' />
          <member value='&quot;Ohio&quot;' />
          <member value='&quot;Oklahoma&quot;' />
          <member value='&quot;Oregon&quot;' />
          <member value='&quot;Pennsylvania&quot;' />
          <member value='&quot;Rhode Island&quot;' />
          <member value='&quot;South Carolina&quot;' />
          <member value='&quot;South Dakota&quot;' />
          <member value='&quot;Tennessee&quot;' />
          <member value='&quot;Texas&quot;' />
          <member value='&quot;Utah&quot;' />
          <member value='&quot;Virginia&quot;' />
          <member value='&quot;Washington&quot;' />
          <member value='&quot;Wisconsin&quot;' />
        </members>
      </column>
      <column alias='2018-2020' caption='Year.parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='2018-2020' />
        </aliases>
        <members>
          <member alias='2018-2020' value='&quot;All&quot;' />
          <member value='&quot;2018&quot;' />
          <member value='&quot;2019&quot;' />
          <member value='&quot;2020&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sales Orders Sheet+ (Regional_Sales)' inline='true' name='federated.086db161b3fty012f8rgb1e2j1sk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Regional_Sales' name='excel-direct.1td8luv145n5qn13z2acs1o9c3uj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/matth/OneDrive/Desktop/Eastern/600/Regional_Sales.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Store Locations Sheet].[StateCode]' />
              <expression op='[Regions Sheet].[StateCode]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Sales Orders Sheet].[SalesTeamID]' />
                <expression op='[Sales Team Sheet].[SalesTeamID]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Sales Orders Sheet].[CategoryID]' />
                  <expression op='[Categories Sheet].[CategoryID]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Sales Orders Sheet].[StoreID]' />
                    <expression op='[Store Locations Sheet].[StoreID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Sales Orders Sheet' table='[&apos;Sales Orders Sheet$&apos;]' type='table'>
                  <columns gridOrigin='A1:O7984:no:A1:O7984:0' header='yes' outcome='6'>
                    <column datatype='string' name='OrderNumber' ordinal='0' />
                    <column datatype='string' name='SalesChannel' ordinal='1' />
                    <column datatype='string' name='WarehouseCode' ordinal='2' />
                    <column datatype='date' name='OrderDate' ordinal='3' />
                    <column datatype='date' name='ShipDate' ordinal='4' />
                    <column datatype='date' name='DeliveryDate' ordinal='5' />
                    <column datatype='string' name='CurrencyCode' ordinal='6' />
                    <column datatype='integer' name='SalesTeamID' ordinal='7' />
                    <column datatype='integer' name='CustomerID' ordinal='8' />
                    <column datatype='integer' name='StoreID' ordinal='9' />
                    <column datatype='integer' name='CategoryID' ordinal='10' />
                    <column datatype='integer' name='OrderQuantity' ordinal='11' />
                    <column datatype='real' name='DiscountApplied' ordinal='12' />
                    <column datatype='real' name='UnitPrice' ordinal='13' />
                    <column datatype='real' name='UnitCost' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Store Locations Sheet' table='[&apos;Store Locations Sheet$&apos;]' type='table'>
                  <columns gridOrigin='A1:O368:no:A1:O368:0' header='yes' outcome='2'>
                    <column datatype='integer' name='StoreID' ordinal='0' />
                    <column datatype='string' name='CityName' ordinal='1' />
                    <column datatype='string' name='County' ordinal='2' />
                    <column datatype='string' name='StateCode' ordinal='3' />
                    <column datatype='string' name='State' ordinal='4' />
                    <column datatype='string' name='Type' ordinal='5' />
                    <column datatype='real' name='Latitude' ordinal='6' />
                    <column datatype='real' name='Longitude' ordinal='7' />
                    <column datatype='string' name='AreaCode' ordinal='8' />
                    <column datatype='integer' name='Population' ordinal='9' />
                    <column datatype='integer' name='HouseholdIncome' ordinal='10' />
                    <column datatype='integer' name='MedianIncome' ordinal='11' />
                    <column datatype='integer' name='LandArea' ordinal='12' />
                    <column datatype='integer' name='WaterArea' ordinal='13' />
                    <column datatype='string' name='TimeZone' ordinal='14' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Categories Sheet' table='[&apos;Categories Sheet$&apos;]' type='table'>
                <columns gridOrigin='A1:B48:no:A1:B48:0' header='yes' outcome='6'>
                  <column datatype='integer' name='CategoryID' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Sales Team Sheet' table='[&apos;Sales Team Sheet$&apos;]' type='table'>
              <columns gridOrigin='A1:C29:no:A1:C29:0' header='yes' outcome='6'>
                <column datatype='integer' name='SalesTeamID' ordinal='0' />
                <column datatype='string' name='SalesTeam' ordinal='1' />
                <column datatype='integer' name='YearlySalesGoal' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Regions Sheet' table='[&apos;Regions Sheet$&apos;]' type='table'>
            <columns gridOrigin='A1:C49:no:A1:C49:0' header='yes' outcome='6'>
              <column datatype='string' name='StateCode' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Store Locations Sheet].[StateCode]' />
              <expression op='[Regions Sheet].[StateCode]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Sales Orders Sheet].[SalesTeamID]' />
                <expression op='[Sales Team Sheet].[SalesTeamID]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Sales Orders Sheet].[CategoryID]' />
                  <expression op='[Categories Sheet].[CategoryID]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Sales Orders Sheet].[StoreID]' />
                    <expression op='[Store Locations Sheet].[StoreID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Sales Orders Sheet' table='[&apos;Sales Orders Sheet$&apos;]' type='table'>
                  <columns gridOrigin='A1:O7984:no:A1:O7984:0' header='yes' outcome='6'>
                    <column datatype='string' name='OrderNumber' ordinal='0' />
                    <column datatype='string' name='SalesChannel' ordinal='1' />
                    <column datatype='string' name='WarehouseCode' ordinal='2' />
                    <column datatype='date' name='OrderDate' ordinal='3' />
                    <column datatype='date' name='ShipDate' ordinal='4' />
                    <column datatype='date' name='DeliveryDate' ordinal='5' />
                    <column datatype='string' name='CurrencyCode' ordinal='6' />
                    <column datatype='integer' name='SalesTeamID' ordinal='7' />
                    <column datatype='integer' name='CustomerID' ordinal='8' />
                    <column datatype='integer' name='StoreID' ordinal='9' />
                    <column datatype='integer' name='CategoryID' ordinal='10' />
                    <column datatype='integer' name='OrderQuantity' ordinal='11' />
                    <column datatype='real' name='DiscountApplied' ordinal='12' />
                    <column datatype='real' name='UnitPrice' ordinal='13' />
                    <column datatype='real' name='UnitCost' ordinal='14' />
                  </columns>
                </relation>
                <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Store Locations Sheet' table='[&apos;Store Locations Sheet$&apos;]' type='table'>
                  <columns gridOrigin='A1:O368:no:A1:O368:0' header='yes' outcome='2'>
                    <column datatype='integer' name='StoreID' ordinal='0' />
                    <column datatype='string' name='CityName' ordinal='1' />
                    <column datatype='string' name='County' ordinal='2' />
                    <column datatype='string' name='StateCode' ordinal='3' />
                    <column datatype='string' name='State' ordinal='4' />
                    <column datatype='string' name='Type' ordinal='5' />
                    <column datatype='real' name='Latitude' ordinal='6' />
                    <column datatype='real' name='Longitude' ordinal='7' />
                    <column datatype='string' name='AreaCode' ordinal='8' />
                    <column datatype='integer' name='Population' ordinal='9' />
                    <column datatype='integer' name='HouseholdIncome' ordinal='10' />
                    <column datatype='integer' name='MedianIncome' ordinal='11' />
                    <column datatype='integer' name='LandArea' ordinal='12' />
                    <column datatype='integer' name='WaterArea' ordinal='13' />
                    <column datatype='string' name='TimeZone' ordinal='14' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Categories Sheet' table='[&apos;Categories Sheet$&apos;]' type='table'>
                <columns gridOrigin='A1:B48:no:A1:B48:0' header='yes' outcome='6'>
                  <column datatype='integer' name='CategoryID' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Sales Team Sheet' table='[&apos;Sales Team Sheet$&apos;]' type='table'>
              <columns gridOrigin='A1:C29:no:A1:C29:0' header='yes' outcome='6'>
                <column datatype='integer' name='SalesTeamID' ordinal='0' />
                <column datatype='string' name='SalesTeam' ordinal='1' />
                <column datatype='integer' name='YearlySalesGoal' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Regions Sheet' table='[&apos;Regions Sheet$&apos;]' type='table'>
            <columns gridOrigin='A1:C49:no:A1:C49:0' header='yes' outcome='6'>
              <column datatype='string' name='StateCode' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AreaCode]' value='[Store Locations Sheet].[AreaCode]' />
          <map key='[CategoryID (Categories Sheet)]' value='[Categories Sheet].[CategoryID]' />
          <map key='[CategoryID]' value='[Sales Orders Sheet].[CategoryID]' />
          <map key='[Category]' value='[Categories Sheet].[Category]' />
          <map key='[CityName]' value='[Store Locations Sheet].[CityName]' />
          <map key='[County]' value='[Store Locations Sheet].[County]' />
          <map key='[CurrencyCode]' value='[Sales Orders Sheet].[CurrencyCode]' />
          <map key='[CustomerID]' value='[Sales Orders Sheet].[CustomerID]' />
          <map key='[DeliveryDate]' value='[Sales Orders Sheet].[DeliveryDate]' />
          <map key='[DiscountApplied]' value='[Sales Orders Sheet].[DiscountApplied]' />
          <map key='[HouseholdIncome]' value='[Store Locations Sheet].[HouseholdIncome]' />
          <map key='[LandArea]' value='[Store Locations Sheet].[LandArea]' />
          <map key='[Latitude]' value='[Store Locations Sheet].[Latitude]' />
          <map key='[Longitude]' value='[Store Locations Sheet].[Longitude]' />
          <map key='[MedianIncome]' value='[Store Locations Sheet].[MedianIncome]' />
          <map key='[OrderDate]' value='[Sales Orders Sheet].[OrderDate]' />
          <map key='[OrderNumber]' value='[Sales Orders Sheet].[OrderNumber]' />
          <map key='[OrderQuantity]' value='[Sales Orders Sheet].[OrderQuantity]' />
          <map key='[Population]' value='[Store Locations Sheet].[Population]' />
          <map key='[Region]' value='[Regions Sheet].[Region]' />
          <map key='[SalesChannel]' value='[Sales Orders Sheet].[SalesChannel]' />
          <map key='[SalesTeamID (Sales Team Sheet)]' value='[Sales Team Sheet].[SalesTeamID]' />
          <map key='[SalesTeamID]' value='[Sales Orders Sheet].[SalesTeamID]' />
          <map key='[SalesTeam]' value='[Sales Team Sheet].[SalesTeam]' />
          <map key='[ShipDate]' value='[Sales Orders Sheet].[ShipDate]' />
          <map key='[State (Regions Sheet)]' value='[Regions Sheet].[State]' />
          <map key='[StateCode (Regions Sheet)]' value='[Regions Sheet].[StateCode]' />
          <map key='[StateCode]' value='[Store Locations Sheet].[StateCode]' />
          <map key='[State]' value='[Store Locations Sheet].[State]' />
          <map key='[StoreID (Store Locations Sheet)]' value='[Store Locations Sheet].[StoreID]' />
          <map key='[StoreID]' value='[Sales Orders Sheet].[StoreID]' />
          <map key='[TimeZone]' value='[Store Locations Sheet].[TimeZone]' />
          <map key='[Type]' value='[Store Locations Sheet].[Type]' />
          <map key='[UnitCost]' value='[Sales Orders Sheet].[UnitCost]' />
          <map key='[UnitPrice]' value='[Sales Orders Sheet].[UnitPrice]' />
          <map key='[WarehouseCode]' value='[Sales Orders Sheet].[WarehouseCode]' />
          <map key='[WaterArea]' value='[Store Locations Sheet].[WaterArea]' />
          <map key='[YearlySalesGoal]' value='[Sales Team Sheet].[YearlySalesGoal]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O7984:no:A1:O7984:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O368:no:A1:O368:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Categories Sheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B48:no:A1:B48:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales Team Sheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C29:no:A1:C29:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Regions Sheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C49:no:A1:C49:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderNumber</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OrderNumber]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>OrderNumber</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalesChannel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SalesChannel]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>SalesChannel</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WarehouseCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WarehouseCode]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>WarehouseCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[OrderDate]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>OrderDate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShipDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ShipDate]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>ShipDate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeliveryDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DeliveryDate]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>DeliveryDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrencyCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CurrencyCode]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>CurrencyCode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalesTeamID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SalesTeamID]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>SalesTeamID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CustomerID]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>CustomerID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StoreID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[StoreID]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>StoreID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CategoryID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CategoryID]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>CategoryID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderQuantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OrderQuantity]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>OrderQuantity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DiscountApplied</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DiscountApplied]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>DiscountApplied</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnitPrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UnitPrice]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>UnitPrice</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UnitCost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UnitCost]</local-name>
            <parent-name>[Sales Orders Sheet]</parent-name>
            <remote-alias>UnitCost</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StoreID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[StoreID (Store Locations Sheet)]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>StoreID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CityName]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>CityName</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateCode]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>StateCode</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AreaCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AreaCode]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>AreaCode</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseholdIncome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HouseholdIncome]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>HouseholdIncome</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MedianIncome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MedianIncome]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>MedianIncome</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LandArea]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>LandArea</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WaterArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WaterArea]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>WaterArea</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeZone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TimeZone]</local-name>
            <parent-name>[Store Locations Sheet]</parent-name>
            <remote-alias>TimeZone</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CategoryID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CategoryID (Categories Sheet)]</local-name>
            <parent-name>[Categories Sheet]</parent-name>
            <remote-alias>CategoryID</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Categories Sheet]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalesTeamID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SalesTeamID (Sales Team Sheet)]</local-name>
            <parent-name>[Sales Team Sheet]</parent-name>
            <remote-alias>SalesTeamID</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalesTeam</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SalesTeam]</local-name>
            <parent-name>[Sales Team Sheet]</parent-name>
            <remote-alias>SalesTeam</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearlySalesGoal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearlySalesGoal]</local-name>
            <parent-name>[Sales Team Sheet]</parent-name>
            <remote-alias>YearlySalesGoal</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateCode (Regions Sheet)]</local-name>
            <parent-name>[Regions Sheet]</parent-name>
            <remote-alias>StateCode</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Regions Sheet)]</local-name>
            <parent-name>[Regions Sheet]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Regions Sheet]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area Code' datatype='string' name='[AreaCode]' role='dimension' semantic-role='[AreaCode].[Name]' type='nominal' />
      <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
      </column>
      <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
      </column>
      <column caption='Categories Fillter' datatype='boolean' name='[Calculation_2005790727137415175]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK(SUM([Calculation_668221637543665667])) &lt;= 3'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank Sum Sales Filter' datatype='boolean' name='[Calculation_2005790727141003274]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK(SUM([Calculation_668221637543665667])) &lt;= 3'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Category Sales Filter' datatype='real' name='[Calculation_2005790727143337995]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Category], [State]: SUM([Calculation_668221637543665667]) }' />
      </column>
      <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='YEAR([OrderDate])' />
      </column>
      <column caption='Country Profit' datatype='real' name='[Calculation_2005790727173333007]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED: sum([Calculation_668221637543665667])}' />
      </column>
      <column caption='Rank Sales' datatype='integer' name='[Calculation_2005790727186567186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Rank(Sum([Calculation_668221637543665667]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
      </column>
      <column caption='Year' datatype='integer' name='[Calculation_668221637580726289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='YEAR(([OrderDate]))' />
      </column>
      <column caption='Sales by Year' datatype='real' name='[Calculation_668221637580890130]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_668221637580726289], [SalesTeam] : SUM([Calculation_668221637543665667]) }' />
      </column>
      <column caption='Profit' datatype='real' name='[Calculation_891149819144695809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity] - [UnitCost]*[OrderQuantity]' />
      </column>
      <column caption='All Months' datatype='datetime' name='[Calculation_891149819145596930]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [OrderDate])' />
      </column>
      <column caption='Region Rank' datatype='integer' name='[Calculation_891149819163176963]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Rank(AVG([Calculation_668221637543665667]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running Sum Sales' datatype='real' name='[Calculation_891149819164221445]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_668221637543665667]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='blank' datatype='string' name='[Calculation_891149819171721228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column datatype='integer' name='[CategoryID (Categories Sheet)]' role='dimension' type='ordinal' />
      <column caption='Category ID' datatype='integer' name='[CategoryID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Currency Code' datatype='string' hidden='true' name='[CurrencyCode]' role='dimension' type='nominal' />
      <column caption='Customer ID' datatype='integer' hidden='true' name='[CustomerID]' role='dimension' type='ordinal' />
      <column caption='Delivery Date' datatype='date' name='[DeliveryDate]' role='dimension' type='ordinal' />
      <column caption='Discount Applied' datatype='real' name='[DiscountApplied]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Household Income (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[HouseholdIncome]' peg='0' size='20000' />
      </column>
      <column caption='Household Income' datatype='integer' name='[HouseholdIncome]' role='measure' type='quantitative' />
      <column caption='Land Area' datatype='integer' name='[LandArea]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Median Income' datatype='integer' name='[MedianIncome]' role='measure' type='quantitative' />
      <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
      <column caption='Order Number' datatype='string' name='[OrderNumber]' role='dimension' type='nominal' />
      <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sales Channel (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[SalesChannel]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;In-Store &amp; Online&quot;'>
            <value>&quot;In-Store&quot;</value>
            <value>&quot;Online&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Sales Channel' datatype='string' name='[SalesChannel]' role='dimension' type='nominal' />
      <column datatype='integer' name='[SalesTeamID (Sales Team Sheet)]' role='dimension' type='ordinal' />
      <column caption='Sales Team ID' datatype='integer' hidden='true' name='[SalesTeamID]' role='dimension' type='ordinal' />
      <column caption='Sales Team' datatype='string' name='[SalesTeam]' role='dimension' type='nominal' />
      <column caption='Ship Date' datatype='date' name='[ShipDate]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State (Regions Sheet)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Code' datatype='string' name='[StateCode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[StoreID (Store Locations Sheet)]' role='dimension' type='ordinal' />
      <column caption='Store ID' datatype='integer' name='[StoreID]' role='dimension' type='ordinal' />
      <column caption='Time Zone' datatype='string' name='[TimeZone]' role='dimension' type='nominal' />
      <column caption='Unit Cost' datatype='real' name='[UnitCost]' role='measure' type='quantitative' />
      <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
      <column caption='Warehouse Code' datatype='string' hidden='true' name='[WarehouseCode]' role='dimension' type='nominal' />
      <column caption='Water Area' datatype='integer' name='[WaterArea]' role='measure' type='quantitative' />
      <column caption='Yearly Sales Goal' datatype='integer' name='[YearlySalesGoal]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sales Orders Sheet' datatype='table' name='[__tableau_internal_object_id__].[Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_668221637543665667]' derivation='Avg' name='[avg:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_668221637580890130]' derivation='Avg' name='[avg:Calculation_668221637580890130:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_891149819144695809]' derivation='Avg' name='[avg:Calculation_891149819144695809:qk]' pivot='key' type='quantitative' />
      <column-instance column='[YearlySalesGoal]' derivation='Avg' name='[avg:YearlySalesGoal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_668221637543665667]' derivation='None' name='[none:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_668221637580890130]' derivation='None' name='[none:Calculation_668221637580890130:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[DiscountApplied]' derivation='None' name='[none:DiscountApplied:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MedianIncome]' derivation='None' name='[none:MedianIncome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[SalesTeam]' derivation='None' name='[none:SalesTeam:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[OrderDate]' derivation='Quarter' name='[qr:OrderDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_668221637580890130]' derivation='Sum' name='[sum:Calculation_668221637580890130:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_891149819144695809]' derivation='Sum' name='[sum:Calculation_891149819144695809:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DiscountApplied]' derivation='Sum' name='[sum:DiscountApplied:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MedianIncome]' derivation='Sum' name='[sum:MedianIncome:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_891149819145596930]' derivation='Year-Trunc' name='[tyr:Calculation_891149819145596930:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (QUARTER(Order Date),YEAR(All Months))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:OrderDate:ok]' />
          <groupfilter function='level-members' level='[tyr:Calculation_891149819145596930:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#72bac6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#a1d5d2'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SalesTeam:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chris Armstrong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adam Hernandez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrick Graham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Torres&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shawn Torres&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jenny Hawkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglas Tucker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Nguyen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shawn Wallace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monica Price&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alice Roberts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riley Rice&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joshua Ryan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sherry Cook&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jerry Green&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joshua Bennett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kate Griffin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nichole Cunningham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frankie Brown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Catherine Reynolds&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stephanie Payne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amy Holmes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roger Alexander&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joshua Little&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;George Lewis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Berry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samuel Fowler&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Wine &amp; Beer Production&quot;</bucket>
            </map>
            <map to='#2c5c87'>
              <bucket>&quot;Wall Frames&quot;</bucket>
            </map>
            <map to='#2d5f89'>
              <bucket>&quot;Wall Coverings &amp; Paint&quot;</bucket>
            </map>
            <map to='#2e628c'>
              <bucket>&quot;Video Games&quot;</bucket>
            </map>
            <map to='#2e658e'>
              <bucket>&quot;Vases&quot;</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>&quot;TV and Video&quot;</bucket>
            </map>
            <map to='#306b93'>
              <bucket>&quot;Tools&quot;</bucket>
            </map>
            <map to='#306e96'>
              <bucket>&quot;Textbooks &amp; Manuals&quot;</bucket>
            </map>
            <map to='#317298'>
              <bucket>&quot;Tech Apparel&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;Tech Accessories&quot;</bucket>
            </map>
            <map to='#33789d'>
              <bucket>&quot;Soccer Tech&quot;</bucket>
            </map>
            <map to='#337c9f'>
              <bucket>&quot;Pool Accessories&quot;</bucket>
            </map>
            <map to='#347fa1'>
              <bucket>&quot;Photo Tech&quot;</bucket>
            </map>
            <map to='#3482a4'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#3485a6'>
              <bucket>&quot;Personal Care Appliances&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;Outdoor Furniture&quot;</bucket>
            </map>
            <map to='#358cab'>
              <bucket>&quot;Outdoor Decor&quot;</bucket>
            </map>
            <map to='#368fae'>
              <bucket>&quot;Office Furniture&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;Misc Gaming Furniture&quot;</bucket>
            </map>
            <map to='#3b96b2'>
              <bucket>&quot;Light Fixtures&quot;</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>&quot;Laptop Computers&quot;</bucket>
            </map>
            <map to='#419cb6'>
              <bucket>&quot;Landscaping Supplies&quot;</bucket>
            </map>
            <map to='#43a0b8'>
              <bucket>&quot;Kitchen Luxury&quot;</bucket>
            </map>
            <map to='#47a3b9'>
              <bucket>&quot;Kitchen Appliances&quot;</bucket>
            </map>
            <map to='#4da6bb'>
              <bucket>&quot;Jewerly&quot;</bucket>
            </map>
            <map to='#53a9bd'>
              <bucket>&quot;Hotel Tech&quot;</bucket>
            </map>
            <map to='#58acbe'>
              <bucket>&quot;Home Décor&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;Holiday Tech&quot;</bucket>
            </map>
            <map to='#64b2c1'>
              <bucket>&quot;Hardware&quot;</bucket>
            </map>
            <map to='#69b5c3'>
              <bucket>&quot;Gaming Chairs&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Fragrances&quot;</bucket>
            </map>
            <map to='#73bbc6'>
              <bucket>&quot;Floor Lamps&quot;</bucket>
            </map>
            <map to='#78bec8'>
              <bucket>&quot;Fitness Trackers&quot;</bucket>
            </map>
            <map to='#7dc0c9'>
              <bucket>&quot;Executive Office&quot;</bucket>
            </map>
            <map to='#82c3cb'>
              <bucket>&quot;Dining Furniture&quot;</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>&quot;Desktop Computers&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;Cookware&quot;</bucket>
            </map>
            <map to='#91ccce'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#96cfcf'>
              <bucket>&quot;Car Accessories&quot;</bucket>
            </map>
            <map to='#9bd1d0'>
              <bucket>&quot;Candles&quot;</bucket>
            </map>
            <map to='#a0d4d1'>
              <bucket>&quot;Candleholders&quot;</bucket>
            </map>
            <map to='#a5d7d3'>
              <bucket>&quot;Bedroom Tech&quot;</bucket>
            </map>
            <map to='#abdad4'>
              <bucket>&quot;Bedroom Furniture&quot;</bucket>
            </map>
            <map to='#abdbd4'>
              <bucket>&quot;Basketball Tech&quot;</bucket>
            </map>
            <map to='#b0ddd5'>
              <bucket>&quot;Baseball Tech&quot;</bucket>
            </map>
            <map to='#b6e0d6'>
              <bucket>&quot;Bakeware&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Audio Equipment&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Midwest&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[avg:YearlySalesGoal:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_891149819144695809:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[none:DiscountApplied:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_891149819144695809:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:DiscountApplied:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_668221637543665667:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_668221637580890130:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_668221637543665667:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_668221637580890130:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637580890130:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[none:MedianIncome:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:MedianIncome:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sales Channel (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;In-Store &amp; Online&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='All States' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sales Orders Sheet' id='Sales Orders Sheet_770F7FFCDB7243E49FEB11FD439F827C'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Store Locations Sheet].[StateCode]' />
                    <expression op='[Regions Sheet].[StateCode]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[Sales Orders Sheet].[SalesTeamID]' />
                      <expression op='[Sales Team Sheet].[SalesTeamID]' />
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[Sales Orders Sheet].[CategoryID]' />
                        <expression op='[Categories Sheet].[CategoryID]' />
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[Sales Orders Sheet].[StoreID]' />
                          <expression op='[Store Locations Sheet].[StoreID]' />
                        </expression>
                      </clause>
                      <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Sales Orders Sheet' table='[&apos;Sales Orders Sheet$&apos;]' type='table'>
                        <columns gridOrigin='A1:O7984:no:A1:O7984:0' header='yes' outcome='6'>
                          <column datatype='string' name='OrderNumber' ordinal='0' />
                          <column datatype='string' name='SalesChannel' ordinal='1' />
                          <column datatype='string' name='WarehouseCode' ordinal='2' />
                          <column datatype='date' name='OrderDate' ordinal='3' />
                          <column datatype='date' name='ShipDate' ordinal='4' />
                          <column datatype='date' name='DeliveryDate' ordinal='5' />
                          <column datatype='string' name='CurrencyCode' ordinal='6' />
                          <column datatype='integer' name='SalesTeamID' ordinal='7' />
                          <column datatype='integer' name='CustomerID' ordinal='8' />
                          <column datatype='integer' name='StoreID' ordinal='9' />
                          <column datatype='integer' name='CategoryID' ordinal='10' />
                          <column datatype='integer' name='OrderQuantity' ordinal='11' />
                          <column datatype='real' name='DiscountApplied' ordinal='12' />
                          <column datatype='real' name='UnitPrice' ordinal='13' />
                          <column datatype='real' name='UnitCost' ordinal='14' />
                        </columns>
                      </relation>
                      <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Store Locations Sheet' table='[&apos;Store Locations Sheet$&apos;]' type='table'>
                        <columns gridOrigin='A1:O368:no:A1:O368:0' header='yes' outcome='2'>
                          <column datatype='integer' name='StoreID' ordinal='0' />
                          <column datatype='string' name='CityName' ordinal='1' />
                          <column datatype='string' name='County' ordinal='2' />
                          <column datatype='string' name='StateCode' ordinal='3' />
                          <column datatype='string' name='State' ordinal='4' />
                          <column datatype='string' name='Type' ordinal='5' />
                          <column datatype='real' name='Latitude' ordinal='6' />
                          <column datatype='real' name='Longitude' ordinal='7' />
                          <column datatype='string' name='AreaCode' ordinal='8' />
                          <column datatype='integer' name='Population' ordinal='9' />
                          <column datatype='integer' name='HouseholdIncome' ordinal='10' />
                          <column datatype='integer' name='MedianIncome' ordinal='11' />
                          <column datatype='integer' name='LandArea' ordinal='12' />
                          <column datatype='integer' name='WaterArea' ordinal='13' />
                          <column datatype='string' name='TimeZone' ordinal='14' />
                        </columns>
                      </relation>
                    </relation>
                    <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Categories Sheet' table='[&apos;Categories Sheet$&apos;]' type='table'>
                      <columns gridOrigin='A1:B48:no:A1:B48:0' header='yes' outcome='6'>
                        <column datatype='integer' name='CategoryID' ordinal='0' />
                        <column datatype='string' name='Category' ordinal='1' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Sales Team Sheet' table='[&apos;Sales Team Sheet$&apos;]' type='table'>
                    <columns gridOrigin='A1:C29:no:A1:C29:0' header='yes' outcome='6'>
                      <column datatype='integer' name='SalesTeamID' ordinal='0' />
                      <column datatype='string' name='SalesTeam' ordinal='1' />
                      <column datatype='integer' name='YearlySalesGoal' ordinal='2' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.1td8luv145n5qn13z2acs1o9c3uj' name='Regions Sheet' table='[&apos;Regions Sheet$&apos;]' type='table'>
                  <columns gridOrigin='A1:C49:no:A1:C49:0' header='yes' outcome='6'>
                    <column datatype='string' name='StateCode' ordinal='0' />
                    <column datatype='string' name='State' ordinal='1' />
                    <column datatype='string' name='Region' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.086db161b3fty012f8rgb1e2j1sk'>
      <datasources>
        <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
      </datasources>
      <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
        <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
        </column>
        <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
        </column>
        <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='YEAR([OrderDate])' />
        </column>
        <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]'>
        <groupfilter function='member' level='[none:Calculation_2005790727112118272:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Calculation_2005790727113347073:nk]' />
          <groupfilter function='empty-level' member='[none:Calculation_2005790727113347073:nk]' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' context='true' included-values='in-range-or-null'>
        <min>2018</min>
        <max>2020</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Avg sales and profit by Discount'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>Average Sales and Profit </run>
            <run>by Discount applied: Matthew Bilodeau </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Dual axis graph. 2 calculated fields ( AVG(Sales), AVG(profit)), 3 Filters: Year(order Date), state.parameter/filter. 1 color marks card, 1 labels marks card. . Axis sycronized and blue color pallette assingned for readability and disctiontion. This graph shows the average sale&apos;s gross and net profit based on the discount given. It changes greatly based on the location, so it corresponds well within our sales analysis and dashboard, but lacks complementary graphs to give it enough meaning. In some states, the gap is very small at certain discounts, and that discount rate should probabaly be avoided. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Profit' datatype='real' name='[Calculation_891149819144695809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity] - [UnitCost]*[OrderQuantity]' />
            </column>
            <column caption='Discount Applied' datatype='real' name='[DiscountApplied]' role='measure' type='quantitative' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Cost' datatype='real' name='[UnitCost]' role='measure' type='quantitative' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Avg' name='[avg:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_891149819144695809]' derivation='Avg' name='[avg:Calculation_891149819144695809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DiscountApplied]' derivation='None' name='[none:DiscountApplied:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_891149819144695809:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_668221637543665667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_891149819144695809:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_668221637543665667:qk] + [federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_891149819144695809:qk])</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[none:DiscountApplied:qk]</cols>
      </table>
      <simple-id uuid='{A456DFF0-F6F8-49E2-87A2-F9578E3F216B}' />
    </worksheet>
    <worksheet name='Box Plots Gross Profit by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales by Category by Year: Matthew Bilodeau</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Box plot. 1 calculated field ( Sum(Sales), 1 text card, 1 detail card. State filter, year filter(applied to all worksheets), and state paramter for interactivity. This chart indicates the distribution of sales of categories in each year, which helps decide what categories should be pushed next year, which corresponds to the theme of sales analysis in the tableau story. In this case, the cateogries have become mostly elecronic and outside materials/activities, Though some staples like office furniture continue strong. It also shows that executive office is not popular</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderDate]' derivation='Year' name='[yr:OrderDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
              <lod column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Light Fixtures&quot;</value>
                <value>476711.70000000001</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Pool Accessories&quot;</value>
                <value>415024.80000000005</value>
                <value>2018</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Phones&quot;</value>
                <value>453583.30000000022</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Office Furniture&quot;</value>
                <value>910925.2999999997</value>
                <value>2019</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Executive Office&quot;</value>
                <value>365552.0</value>
                <value>2020</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Tech Accessories&quot;</value>
                <value>706669.10000000021</value>
                <value>2018</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Video Games&quot;</value>
                <value>986641.99999999977</value>
                <value>2020</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Phones&quot;</value>
                <value>957128.5</value>
                <value>2020</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{78021D25-D1AD-4A54-89DE-37B0C885F8B5}' />
    </worksheet>
    <worksheet name='Histogram Household Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Income Distrubtion of </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run>  Store Locations: Matthew Bilodeau</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Histogram. 1 calculated field(Household Income(bin)), 1 color marks card ,1 text card. 5 filters: Year(order date, State parameter/ filter, Measure names, and household income(excluding extreme outliers). This chart shows the disriubtion of targeted markets. Knowing what products sell better at certain income levels, we can leverage this chart to push the right items to the right income markets, which helps the tableau story&apos;s analysis. In this case, our target market is very much in the 20-120k household range. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column aggregation='None' datatype='integer' name='[Household Income (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='4' formula='[HouseholdIncome]' peg='0' size='20000' />
            </column>
            <column caption='Household Income' datatype='integer' name='[HouseholdIncome]' role='measure' type='quantitative' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column caption='Yearly Sales Goal' datatype='integer' name='[YearlySalesGoal]' role='measure' type='quantitative' />
            <column-instance column='[HouseholdIncome]' derivation='Count' name='[cnt:HouseholdIncome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Household Income (bin)]' derivation='None' name='[none:Household Income (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Household Income (bin)]' derivation='None' name='[none:Household Income (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YearlySalesGoal]' derivation='Sum' name='[sum:YearlySalesGoal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Household Income (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Household Income (bin):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='23' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='24' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='26' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='29' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='36' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='39' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='40' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='44' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='51' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='67' />
                <groupfilter function='member' level='[none:Household Income (bin):ok]' member='155' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Household Income (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Household Income (bin):qk]' value='54' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:YearlySalesGoal:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Household Income (bin):&#9;</run>
                <run bold='true'><![CDATA[<[federated.086db161b3fty012f8rgb1e2j1sk].[none:Household Income (bin):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Household Income:&#9;</run>
                <run bold='true'><![CDATA[<[federated.086db161b3fty012f8rgb1e2j1sk].[cnt:HouseholdIncome:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'><![CDATA[<[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[cnt:HouseholdIncome:qk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Household Income (bin):qk]</cols>
        <show-full-range>
          <column>[federated.086db161b3fty012f8rgb1e2j1sk].[Household Income (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{71B1780C-9971-4725-9EF0-1EF20A228EED}' />
    </worksheet>
    <worksheet name='KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='24'>Sales Analysis: Markets for Growth</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Table. 4 filters: Year(order date), state.parameter/filter, measure names. 1 text mark, SUM(sales, profit, order quanitity) measure values. KPI indicators used for the dashboard to grab attention and focus theme of sales analysis immediately. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Profit' datatype='real' name='[Calculation_891149819144695809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity] - [UnitCost]*[OrderQuantity]' />
            </column>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Cost' datatype='real' name='[UnitCost]' role='measure' type='quantitative' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_891149819144695809]' derivation='Sum' name='[sum:Calculation_891149819144695809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderQuantity]' derivation='Sum' name='[sum:OrderQuantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_891149819144695809:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]&quot;</bucket>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_891149819144695809:qk]&quot;</bucket>
              <bucket>&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#4e79a7' />
            <format attr='text-align' value='center' />
            <format attr='height' value='35' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='22'>&lt;</run>
                <run bold='true' fontsize='22'>[federated.086db161b3fty012f8rgb1e2j1sk].[Multiple Values]</run>
                <run bold='true' fontsize='22'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{037229C8-A44A-41A6-9CC2-63DFC1F97CCB}' />
    </worksheet>
    <worksheet name='Order Size by Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12'>&lt;[Parameters].[Parameter 1]&gt;&apos;s</run>
            <run fontcolor='#000000' fontsize='12'> Order Size by Price and Quantity: Matthew Bilodeau </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Scatter plot/ Quadrant Chart. 1 calculated field( Sum(Sales)). 3 filters: Year(order date), State filter/parameter. 1 color mark, 1 size mark, 1 category mark. 1 reference line. Blue color used to match, size used to emphaize the order quanitity. This chart conveys the top selling categories based on the average unit price sold. Size and color changed to emphsize category and color respecitvely. Labels added and currency added to the sales axis to emphasize money earned. This chart changes based on filters, but generally shows tech has a high order quanity despite higher costs.This correspondds well with the tableau story&apos;s theme of sales analysis about how we should be selling products. In this case, when we are having big pushes for capital fundraising, we should push hotel tech. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[OrderQuantity]' derivation='Avg' name='[avg:OrderQuantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UnitPrice]' derivation='Avg' name='[avg:UnitPrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Audio Equipment&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:UnitPrice:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <size column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
              <lod column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:UnitPrice:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:UnitPrice:qk]' z-order='1' />
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:OrderQuantity:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:OrderQuantity:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:UnitPrice:qk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:OrderQuantity:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:OrderQuantity:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:UnitPrice:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:OrderQuantity:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:UnitPrice:qk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
                  <field>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4.9119170984455955</value>
                <value>2393.1150259067354</value>
                <value>&quot;Tech Accessories&quot;</value>
                <value>2340189.3999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{89F604B7-7F39-4E39-92B3-0F0E6524931C}' />
    </worksheet>
    <worksheet name='Sales Goals Stacked Bar Chart '>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Matthew Bilodeau</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Stacked bar chart. 4 filters: Year(order date), measure names, state.paramter/filter. 1 color mark, 1 size mark. 2 meaure values(AVG Sales Value, AVG Yearly sales goals). Changed the color and size of bars to make it less visually distracting. Changed color to blue to match the rest. While insightful to a boss perhaps, the chart doesn&apos;t contribute to the sales analysis of products/markets in a meaningful way. The boss could see that 2 employees are 250K below their goals, and should be trained, retrained, or replaced. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Year' datatype='integer' name='[Calculation_668221637580726289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR(([OrderDate]))' />
            </column>
            <column caption='Sales by Year' datatype='real' name='[Calculation_668221637580890130]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_668221637580726289], [SalesTeam] : SUM([Calculation_668221637543665667]) }' />
            </column>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column caption='Sales Team' datatype='string' name='[SalesTeam]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column caption='Yearly Sales Goal' datatype='integer' name='[YearlySalesGoal]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_668221637580890130]' derivation='Avg' name='[avg:Calculation_668221637580890130:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YearlySalesGoal]' derivation='Avg' name='[avg:YearlySalesGoal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalesTeam]' derivation='None' name='[none:SalesTeam:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_668221637580890130:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[avg:YearlySalesGoal:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesTeam:nk]' direction='DESC' using='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:Calculation_668221637580890130:qk]' />
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
              <size column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesTeam:nk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{83F3536B-011C-4E3E-AEE4-B243DE72E052}' />
    </worksheet>
    <worksheet name='Sales by Region Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: Matthew Bilodeau</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Pie chart. 1 color mark, 1 angle mark, 1 size mark, 2 text marks. Changed color to blue hue to match other charts, changed label size and number formatting for readability. This chart breaks down sales by region. Though insightful to general terms, not adding enough value that the map doesn&apos;t already show by jsut a glance( western is king! south is a close second). </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='528' />
            <format attr='cell-h' value='528' />
            <format attr='cell' value='66' />
            <format attr='cell-q' value='330' />
            <format attr='text-format' field='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Region:nk]' />
              <wedge-size column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <size column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Region:nk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='15'><![CDATA[<[federated.086db161b3fty012f8rgb1e2j1sk].[none:Region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='15'><![CDATA[<[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5DE86AB5-7040-476B-8D4C-CA36F8A9E3FA}' />
    </worksheet>
    <worksheet name='Sales by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run> Sales  : Matthew Bilodeau</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Map.1 Calculated field(SUM(Sales), 1 LOD calculation(SUM(Country Wide Profit)), 1 colored card, 2 text cards, 2 tool tip cards. 2 Parameters(Year(Order Date), State.paremeter). Set to Blue scaling color for pleasentness. Tool tip redesigned to emphaize figures. Remvoed gridlines for entire workbook. Map displays Profit of each state, filtered by year and state, which gives insight to which states can be focused on more,  which helps the sales analysis in the tableau story. In this case, those states are populous like CA, NY, TX, FL and NY. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Country Profit' datatype='real' name='[Calculation_2005790727173333007]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED: sum([Calculation_668221637543665667])}' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[StateCode (Regions Sheet)]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='Attribute' name='[attr:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateCode (Regions Sheet)]' derivation='None' name='[none:StateCode (Regions Sheet):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727173333007]' derivation='Sum' name='[sum:Calculation_2005790727173333007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.086db161b3fty012f8rgb1e2j1sk].[Longitude (generated)]' field-type='quantitative' max='-1907548.7947242409' min='-19548080.340871945' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.086db161b3fty012f8rgb1e2j1sk].[Latitude (generated)]' field-type='quantitative' max='6420067.3930431549' min='3210138.1518619792' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <tooltip column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_2005790727173333007:qk]' />
              <tooltip column='[federated.086db161b3fty012f8rgb1e2j1sk].[attr:State:nk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:State:nk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:StateCode (Regions Sheet):nk]' />
              <geometry column='[federated.086db161b3fty012f8rgb1e2j1sk].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7'>Country Wide </run>
                <run fontcolor='#000000'>sales are</run>
                <run bold='true' fontcolor='#000000'>Æ </run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[$ <[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_2005790727173333007:qk]> ]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.086db161b3fty012f8rgb1e2j1sk].[none:State:nk]>'s ]]></run>
                <run fontcolor='#000000'>sales are </run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[$<[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]> ]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&#10;&lt;</run>
                <run>[federated.086db161b3fty012f8rgb1e2j1sk].[none:StateCode (Regions Sheet):nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[Latitude (generated)]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D4D927D9-177D-4004-A18B-2BDF14F2A8CD}' />
    </worksheet>
    <worksheet name='Sales by median income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Sales </run>
            <run>by Median Income: Matthew Bilodeau </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Line Graph. 1 calculated field, sum(sales). 4 filters: year(order date), state.parameter, state filter, measure names. 1 trend line.  This graph shows the changes in customers in each state as you change the filter. Helpful to see some states have a very postive correlation with income and purchases (oklahoma) while others have a strong negative (colorado). but lacks complementary graphs to give it enough meaning to be included by itself. It is very helpful to see that in some states, it is better to sell limited quanities at scale. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Profit' datatype='real' name='[Calculation_891149819144695809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity] - [UnitCost]*[OrderQuantity]' />
            </column>
            <column caption='Median Income' datatype='integer' name='[MedianIncome]' role='measure' type='quantitative' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Cost' datatype='real' name='[UnitCost]' role='measure' type='quantitative' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MedianIncome]' derivation='None' name='[none:MedianIncome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_891149819144695809]' derivation='Sum' name='[sum:Calculation_891149819144695809:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_891149819144695809:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[none:MedianIncome:qk]</cols>
      </table>
      <simple-id uuid='{13D8A9A0-5523-4741-8AC5-EB4A073E54E7}' />
    </worksheet>
    <worksheet name='Sales by sales channels'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Sales</run>
            <run> by Sales Channels: Matthew Bilodeau
</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Horizontal Bar chart. 1 calculated field. Sum(sales). 3 filters: Year(Order Date), state filter/parameter. 1 color label, one text label. Grouped the two sections  out performing others and muted the ungrouped colors after labeling for readability. This chart breaks down the amount of sales by their respective sales channels which corresponds to the sales analysis theme of where to focus efforts while selling. In this case, that&apos;d be in stores and online, though the other two still make quite a bit. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sales Channel (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[SalesChannel]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;In-Store &amp; Online&quot;'>
                  <value>&quot;In-Store&quot;</value>
                  <value>&quot;Online&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Sales Channel' datatype='string' name='[SalesChannel]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalesChannel]' derivation='None' name='[none:SalesChannel:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[Sales Channel (group)]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesChannel:nk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</cols>
      </table>
      <simple-id uuid='{7F0C1A78-26B9-4BF3-A773-770F188382CC}' />
    </worksheet>
    <worksheet name='Sales by sales people'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales by Salespeople by year: Matthew Bilodeau </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Table. 2 Calculated fields( RunningSum(Sales), Rank Sales), 2 filters: state perameter/filter. 3 text cards. indicates each sales person&apos;s sales by year, and their rank respecitve to yearly sales. Helpful for a manager evaluate a persons progress in tandem with the sales to sales goals stacked bar chart. This does not give the best insight to imporved targeting sales for our tableau dashboard. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Rank Sales' datatype='integer' name='[Calculation_2005790727186567186]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Rank(Sum([Calculation_668221637543665667]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column caption='Running Sum Sales' datatype='real' name='[Calculation_891149819164221445]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([Calculation_668221637543665667]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column caption='Sales Team' datatype='string' name='[SalesTeam]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalesTeam]' derivation='None' name='[none:SalesTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005790727186567186]' derivation='User' name='[usr:Calculation_2005790727186567186:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_891149819164221445]' derivation='User' name='[usr:Calculation_891149819164221445:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.086db161b3fty012f8rgb1e2j1sk].[SalesTeam]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[OrderDate]' derivation='Year' name='[yr:OrderDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]' value='95' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[usr:Calculation_891149819164221445:qk:8]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[usr:Calculation_2005790727186567186:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesTeam:nk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</cols>
      </table>
      <simple-id uuid='{C1C471A2-432B-4D7C-9BEC-1315CC7A0A00}' />
    </worksheet>
    <worksheet name='Scatter Category Vs Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run fontcolor='#4e79a7' fontsize='12'>Æ </run>
            <run fontcolor='#000000' fontsize='12'>&apos;s Cateogrical Spending based on Income: Matthew Bilodeau</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Scatter plot/ Quadrant Chart. 1 calculated field( Sum(Sales)). 3 filters: Year(order date), State filter/parameter. 1 color mark, 1 size mark, 1 category mark. 1 reference line. Blue color used to match, size used to emphaize the order quanitity. This chart conveys the top selling categories based on income. Size and color changed to emphsize category and color respecitvely. Labels added and currency added to the sales axis to emphasize money earned. This correspondds well with the tableau story&apos;s theme of sales analysis about what should be sold to ceratain markets. In this case, as we sell in higher income areas, we should push tech accessories and office furniture. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Household Income' datatype='integer' name='[HouseholdIncome]' role='measure' type='quantitative' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[HouseholdIncome]' derivation='Avg' name='[avg:HouseholdIncome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Bakeware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
            <format attr='text-format' field='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:HouseholdIncome:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <size column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
              <lod column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:HouseholdIncome:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[avg:HouseholdIncome:qk]' z-order='1' />
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:HouseholdIncome:qk]</cols>
      </table>
      <simple-id uuid='{919F48F2-047C-45AF-9AFF-E3A1E36BA6B2}' />
    </worksheet>
    <worksheet name='Top Selling Online'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Top selling by</run>
            <run bold='true' fontcolor='#4e79a7' fontsize='12'>Æ </run>
            <run bold='true' fontcolor='#4e79a7' fontsize='16'>Online</run>
            <run fontsize='16'>:</run>
            <run fontsize='12'> Matthew Bilodeau</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Scatter plot/ Quadrant Chart. 1 calculated field( Sum(Sales)). 3 filters: Year(order date), State filter/parameter. 1 color mark, 1 size mark, 1 category mark. 1 reference line. Blue color used to match, size used to emphaize the order quanitity. This chart conveys the top selling categories sold online by plotting sales against order quanity which correponds to the theme in our tableau story about what should be sold more. In this case, the website should automatically push for more sales in the dining furniture  and tech accessories when large orders of them are filled.
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column caption='Sales Channel' datatype='string' name='[SalesChannel]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalesChannel]' derivation='None' name='[none:SalesChannel:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderQuantity]' derivation='Sum' name='[sum:OrderQuantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesChannel:nk]'>
            <groupfilter function='member' level='[none:SalesChannel:nk]' member='&quot;Online&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesChannel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <size column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]' z-order='1' />
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]</cols>
      </table>
      <simple-id uuid='{35402915-8BF9-4652-A81D-14E9B26F14D6}' />
    </worksheet>
    <worksheet name='Top selling by stores'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Top Selling Categories </run>
            <run bold='true' fontcolor='#4e79a7' fontsize='16'>In Stores</run>
            <run fontsize='12'>: Matthew Bilodeau</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Scatter plot/ Quadrant Chart. 1 calculated field( Sum(Sales)). 3 filters: Year(order date), State filter/parameter. 1 color mark, 1 size mark, 1 category mark. 1 reference line. Blue color used to match, size used to emphaize the order quanitity. This chart conveys the top selling categories sold in stores by plotting sales against order quanity which correponds to the theme in our tableau story about what should be sold more. In this case, when people are making large orders of phones, landscaping supplies or tech accessories, it might be worth it to push them more. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column caption='Sales Channel' datatype='string' name='[SalesChannel]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalesChannel]' derivation='None' name='[none:SalesChannel:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OrderQuantity]' derivation='Sum' name='[sum:OrderQuantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Basketball Tech&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesChannel:nk]'>
            <groupfilter function='member' level='[none:SalesChannel:nk]' member='&quot;In-Store&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesChannel:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <size column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]' z-order='1' />
            <reference-line axis-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-table' value-column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]</rows>
        <cols>[federated.086db161b3fty012f8rgb1e2j1sk].[sum:OrderQuantity:qk]</cols>
      </table>
      <simple-id uuid='{E217369D-3BCF-444D-8361-A6CF23613405}' />
    </worksheet>
    <worksheet name='Tree Map Top Selling Items'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top selling items in</run>
            <run bold='true' fontcolor='#4e79a7'> &lt;[Parameters].[Parameter 1]&gt;</run>
            <run> : Matthew Bilodeau </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Tree Map. 1 calculated field(Sum(Sales)), 4 filters(year (order date), state parameter/filter, category(top 10 by sum (sales))) .2 text mark cards. I shape card. 1 color card. This map conveys the top sold items in a given year (chosen by filter)  to help decide what to sell next year. This corresponds well with the story. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='All States' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
            <column caption='State.parameter' datatype='boolean' name='[Calculation_2005790727112118272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 1] = &apos;All&apos;, 1=1,&#13;&#10;[State] = [Parameters].[Parameter 1])' />
            </column>
            <column caption='State Filter ' datatype='string' name='[Calculation_2005790727113347073]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [State] = &apos;Alaska&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Alabama&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arkansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Arizona&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;California&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Colorado&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Connecticut&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Delaware&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Florida&apos; THEN State&#13;&#10;ELSEIF  [State] = &apos;Georgia&apos; THEN State&#13;&#10;ELSEIF [State] = &apos;Hawaii&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Iowa&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Idaho&apos; THEN [State]&#13;&#10;ELSEIF[State] = &apos;Indiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kansas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Kentucky&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Louisiana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Massachusetts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maryland&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Maine&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Michigan&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Minnesota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Missouri&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Mississippi&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Montana&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;North Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Hampshire&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Jersey&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New Mexico&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Nevada&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;New York&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Ohio&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Oklahoma&apos; THEN [State]&#13;&#10;ELSEIF [State] = &apos;Oregon&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Pennsylvania&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Rhode Island&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Carolina&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;South Dakota&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Tennessee&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Texas&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Utah&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Vermonts&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Washington&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wisconsin&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;West Virginia&apos; THEN [State]&#13;&#10;ELSEIF  [State] = &apos;Wyoming&apos; THEN [State]&#13;&#10;END' />
            </column>
            <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([OrderDate])' />
            </column>
            <column caption='Sales' datatype='real' name='[Calculation_668221637543665667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[UnitPrice]*[OrderQuantity]' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[OrderQuantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UnitPrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2005790727112118272]' derivation='None' name='[none:Calculation_2005790727112118272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727113347073]' derivation='None' name='[none:Calculation_2005790727113347073:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_668221637543665667]' derivation='Sum' name='[sum:Calculation_668221637543665667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_668221637543665667])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</column>
            <column>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' num-steps='15' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <color column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]' />
              <text column='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7F0DC80D-8F4C-45A5-BF3E-2529A866D9DC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='All States' />
          </aliases>
          <members>
            <member alias='All States' value='&quot;All&quot;' />
            <member value='&quot;Alabama&quot;' />
            <member value='&quot;Arizona&quot;' />
            <member value='&quot;Arkansas&quot;' />
            <member value='&quot;California&quot;' />
            <member value='&quot;Colorado&quot;' />
            <member value='&quot;Connecticut&quot;' />
            <member value='&quot;District of Columbia&quot;' />
            <member value='&quot;Florida&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Hawaii&quot;' />
            <member value='&quot;Idaho&quot;' />
            <member value='&quot;Illinois&quot;' />
            <member value='&quot;Indiana&quot;' />
            <member value='&quot;Iowa&quot;' />
            <member value='&quot;Kansas&quot;' />
            <member value='&quot;Kentucky&quot;' />
            <member value='&quot;Louisiana&quot;' />
            <member value='&quot;Maryland&quot;' />
            <member value='&quot;Massachusetts&quot;' />
            <member value='&quot;Michigan&quot;' />
            <member value='&quot;Minnesota&quot;' />
            <member value='&quot;Mississippi&quot;' />
            <member value='&quot;Missouri&quot;' />
            <member value='&quot;Montana&quot;' />
            <member value='&quot;Nebraska&quot;' />
            <member value='&quot;Nevada&quot;' />
            <member value='&quot;New Hampshire&quot;' />
            <member value='&quot;New Jersey&quot;' />
            <member value='&quot;New Mexico&quot;' />
            <member value='&quot;New York&quot;' />
            <member value='&quot;North Carolina&quot;' />
            <member value='&quot;North Dakota&quot;' />
            <member value='&quot;Ohio&quot;' />
            <member value='&quot;Oklahoma&quot;' />
            <member value='&quot;Oregon&quot;' />
            <member value='&quot;Pennsylvania&quot;' />
            <member value='&quot;Rhode Island&quot;' />
            <member value='&quot;South Carolina&quot;' />
            <member value='&quot;South Dakota&quot;' />
            <member value='&quot;Tennessee&quot;' />
            <member value='&quot;Texas&quot;' />
            <member value='&quot;Utah&quot;' />
            <member value='&quot;Virginia&quot;' />
            <member value='&quot;Washington&quot;' />
            <member value='&quot;Wisconsin&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
        <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='YEAR([OrderDate])' />
        </column>
        <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='43' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='98214' id='40' param='horz' type-v2='layout-flow' w='77063' x='468' y='893'>
              <zone h='98214' id='38' type-v2='layout-basic' w='77063' x='468' y='893'>
                <zone h='55135' id='28' param='horz' type-v2='layout-flow' w='77063' x='468' y='43972'>
                  <zone h='55135' id='26' type-v2='layout-basic' w='77063' x='468' y='43972'>
                    <zone h='55135' id='7' param='horz' type-v2='layout-flow' w='77063' x='468' y='43972'>
                      <zone h='55135' id='5' type-v2='layout-basic' w='77063' x='468' y='43972'>
                        <zone h='27121' id='67' param='horz' type-v2='layout-flow' w='77063' x='468' y='43972'>
                          <zone h='27121' id='10' name='Histogram Household Income' w='77063' x='468' y='43972'>
                            <layout-cache minwidth='152' type-h='fixed' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='28014' id='68' param='horz' type-v2='layout-flow' w='77063' x='468' y='71093'>
                          <zone h='28014' id='11' name='Sales by sales channels' w='77063' x='468' y='71093'>
                            <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='26785' id='66' param='horz' type-v2='layout-flow' w='77063' x='468' y='17187'>
                  <zone h='26785' id='41' name='Sales by State' w='77063' x='468' y='17187'>
                    <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='16294' id='69' param='horz' type-v2='layout-flow' w='77063' x='468' y='893'>
                  <zone h='13728' id='36' name='KPI' w='77063' x='468' y='893'>
                    <layout-cache cell-count-w='3' fixed-size-h='115' non-cell-size-w='1' type-h='fixed' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='376' h='98214' id='42' is-fixed='true' param='vert' type-v2='layout-flow' w='22001' x='77531' y='893'>
              <zone h='5692' id='44' name='Sales by State' param='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='22001' x='77531' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92522' id='70' param='vert' type-v2='layout-flow' w='22001' x='77531' y='6585'>
                <zone h='5804' id='46' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='22001' x='77531' y='6585'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7255' id='45' name='Sales by State' pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type-v2='color' w='22001' x='77531' y='12389'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='79463' id='47' name='Box Plots Gross Profit by Year' w='22001' x='77531' y='19644'>
                  <layout-cache cell-count-w='3' minheight='212' non-cell-size-w='74' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='108' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='107' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone fixed-size='102' h='13728' id='36' is-fixed='true' name='KPI' w='77063' x='468' y='893'>
                  <layout-cache cell-count-w='3' fixed-size-h='115' non-cell-size-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5804' id='46' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='22001' x='77531' y='6585'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5692' id='44' name='Sales by State' param='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='22001' x='77531' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='207' h='26785' id='41' is-fixed='true' name='Sales by State' w='77063' x='468' y='17187'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7255' id='45' name='Sales by State' pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type-v2='color' w='22001' x='77531' y='12389'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79463' id='47' is-fixed='true' name='Box Plots Gross Profit by Year' w='22001' x='77531' y='19644'>
                  <layout-cache cell-count-w='3' minheight='212' non-cell-size-w='74' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='209' h='27121' id='10' is-fixed='true' name='Histogram Household Income' w='77063' x='468' y='43972'>
                  <layout-cache minwidth='152' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='28014' id='11' is-fixed='true' name='Sales by sales channels' w='77063' x='468' y='71093'>
                  <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{848BC067-7187-42DE-8DB6-C806F19B227F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2 (2)'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sales Orders Sheet+ (Regional_Sales)' name='federated.086db161b3fty012f8rgb1e2j1sk' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='All States' caption='State.parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='All States' />
          </aliases>
          <members>
            <member alias='All States' value='&quot;All&quot;' />
            <member value='&quot;Alabama&quot;' />
            <member value='&quot;Arizona&quot;' />
            <member value='&quot;Arkansas&quot;' />
            <member value='&quot;California&quot;' />
            <member value='&quot;Colorado&quot;' />
            <member value='&quot;Connecticut&quot;' />
            <member value='&quot;District of Columbia&quot;' />
            <member value='&quot;Florida&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Hawaii&quot;' />
            <member value='&quot;Idaho&quot;' />
            <member value='&quot;Illinois&quot;' />
            <member value='&quot;Indiana&quot;' />
            <member value='&quot;Iowa&quot;' />
            <member value='&quot;Kansas&quot;' />
            <member value='&quot;Kentucky&quot;' />
            <member value='&quot;Louisiana&quot;' />
            <member value='&quot;Maryland&quot;' />
            <member value='&quot;Massachusetts&quot;' />
            <member value='&quot;Michigan&quot;' />
            <member value='&quot;Minnesota&quot;' />
            <member value='&quot;Mississippi&quot;' />
            <member value='&quot;Missouri&quot;' />
            <member value='&quot;Montana&quot;' />
            <member value='&quot;Nebraska&quot;' />
            <member value='&quot;Nevada&quot;' />
            <member value='&quot;New Hampshire&quot;' />
            <member value='&quot;New Jersey&quot;' />
            <member value='&quot;New Mexico&quot;' />
            <member value='&quot;New York&quot;' />
            <member value='&quot;North Carolina&quot;' />
            <member value='&quot;North Dakota&quot;' />
            <member value='&quot;Ohio&quot;' />
            <member value='&quot;Oklahoma&quot;' />
            <member value='&quot;Oregon&quot;' />
            <member value='&quot;Pennsylvania&quot;' />
            <member value='&quot;Rhode Island&quot;' />
            <member value='&quot;South Carolina&quot;' />
            <member value='&quot;South Dakota&quot;' />
            <member value='&quot;Tennessee&quot;' />
            <member value='&quot;Texas&quot;' />
            <member value='&quot;Utah&quot;' />
            <member value='&quot;Virginia&quot;' />
            <member value='&quot;Washington&quot;' />
            <member value='&quot;Wisconsin&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
        <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='YEAR([OrderDate])' />
        </column>
        <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='4241' id='16' type-v2='empty' w='99064' x='468' y='893'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='93973' id='37' param='vert' type-v2='layout-flow' w='45699' x='468' y='5134'>
            <zone h='93973' id='27' name='Tree Map Top Selling Items' w='45699' x='468' y='5134'>
              <layout-cache cell-count-h='1' non-cell-size-h='43' type-h='cell' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='93973' id='38' param='vert' type-v2='layout-flow' w='53365' x='46167' y='5134'>
            <zone h='5692' id='12' name='Top selling by stores' param='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='53365' x='46167' y='5134'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='32' h='3571' id='6' is-fixed='true' param='horz' type-v2='layout-flow' w='53365' x='46167' y='10826'>
              <zone h='3571' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='53365' x='46167' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='311' h='35603' id='13' is-fixed='true' name='Top Selling Online' w='53365' x='46167' y='14397'>
              <layout-cache minheight='192' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#4e79a7' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='49107' id='11' name='Top selling by stores' w='53365' x='46167' y='50000'>
              <layout-cache minheight='199' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#4e79a7' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='75' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='74' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone fixed-size='280' h='93973' id='27' is-fixed='true' name='Tree Map Top Selling Items' w='45699' x='468' y='5134'>
                  <layout-cache cell-count-h='1' non-cell-size-h='43' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3571' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='53365' x='46167' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='275' h='35603' id='13' is-fixed='true' name='Top Selling Online' w='53365' x='46167' y='14397'>
                  <layout-cache minheight='192' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5692' id='12' name='Top selling by stores' param='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='53365' x='46167' y='5134'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='11' is-fixed='true' name='Top selling by stores' w='53365' x='46167' y='50000'>
                  <layout-cache minheight='199' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C84AAB6E-3B26-4025-96F5-DA6B09FB1061}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='239' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='1' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='3683' id='3' type-v2='title' w='99064' x='468' y='893' />
            <zone fixed-size='124' h='13839' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99064' x='468' y='4576' />
            <zone h='80692' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99064' x='468' y='18415'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='These distributions show areas in which we can continue to target growth' captured-sheet='Dashboard 1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Box Plots Gross Profit by Year'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2018</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Histogram Household Income'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2018</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <worksheet name='KPI'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2018</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Sales by State'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2018</min>
                          <max>2020</max>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.086db161b3fty012f8rgb1e2j1sk].[Latitude (generated)]' field-type='quantitative' max='6441053.1141852066' min='2988078.3033089577' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.086db161b3fty012f8rgb1e2j1sk].[Longitude (generated)]' field-type='quantitative' max='2001564.3940714784' min='-26413999.702756777' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Sales by sales channels'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2018</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column alias='All States' name='[Parameter 1]' value='&quot;All&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Aggregating sales by category encourages us to sell certain categories in targeted state markets ' captured-sheet='Dashboard 2 (2)' id='2'>
                    <capturedDeltas>
                      <worksheet name='Order Size by Price'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2020</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Scatter Category Vs Income'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2020</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Top Selling Online'>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2020</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Top selling by stores'>
                        <datasource-dependencies datasource='federated.086db161b3fty012f8rgb1e2j1sk'>
                          <column caption='Year(Order Date)' datatype='integer' name='[Calculation_2005790727146389516]' role='measure' type='quantitative'>
                            <calculation class='tableau' formula='YEAR([OrderDate])' />
                          </column>
                          <column-instance column='[Calculation_2005790727146389516]' derivation='None' name='[none:Calculation_2005790727146389516:qk]' pivot='key' type='quantitative' />
                        </datasource-dependencies>
                        <filter class='quantitative' column='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' included-values='in-range'>
                          <min>2018</min>
                          <max>2020</max>
                        </filter>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column alias='All States' name='[Parameter 1]' value='&quot;All&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{8334F067-9AAC-477C-A2EE-F0F1707617C1}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sales by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727113347073:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:State:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:StateCode (Regions Sheet):nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{65D041CB-87EB-4862-A195-48CED072AB09}' />
    </window>
    <window class='worksheet' name='Box Plots Gross Profit by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEDD465D-AE5D-417C-B23F-4D117FF57C66}' />
    </window>
    <window class='worksheet' name='Histogram Household Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3EC0F21A-1872-413D-8703-E5F9860BB7C0}' />
    </window>
    <window class='worksheet' name='Sales by sales channels'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[Sales Channel (group)]' type='color' />
            <card param='[federated.086db161b3fty012f8rgb1e2j1sk].[Sales Channel (group)]' type='highlighter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.086db161b3fty012f8rgb1e2j1sk].[Sales Channel (group)]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{24AED27E-6694-46E6-AE39-D27B809FA41F}' />
    </window>
    <window class='worksheet' name='Sales by Region Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='size' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3958A8E4-8AD5-4048-BC3F-37FA7BEF54F4}' />
    </window>
    <window class='worksheet' name='Top selling by stores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[avg:OrderQuantity:qk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727139803145:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727143337995:qk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:OrderQuantity:qk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Region:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesChannel:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:State:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:TimeZone:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Type:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[usr:Calculation_2005790727137415175:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[usr:Calculation_2005790727139803145:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[usr:Calculation_2005790727141003274:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4AFA3168-B7DF-48FB-9B47-8C046CC604F1}' />
    </window>
    <window class='worksheet' name='Top Selling Online'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesChannel:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60144C0C-3615-45A3-B3FA-B63FBCEC522E}' />
    </window>
    <window class='worksheet' name='Sales Goals Stacked Bar Chart '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{480671F8-0623-48D1-8990-6AF4F807872E}' />
    </window>
    <window class='worksheet' name='Scatter Category Vs Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='161'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727112118272:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26545E33-7E2E-4DD2-86A6-7EE0CC48E201}' />
    </window>
    <window class='worksheet' name='Order Size by Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_891149819171721228:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EC5B340-FD04-4041-B08A-568485331C9B}' />
    </window>
    <window class='worksheet' name='Sales by median income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EE8F863-4D57-4133-B6A1-DDBE29920884}' />
    </window>
    <window class='worksheet' name='Avg sales and profit by Discount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A38568ED-493C-422C-A6D9-F37679039087}' />
    </window>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D6D38DA-2538-4711-832D-8D94AC10E66B}' />
    </window>
    <window class='worksheet' name='Sales by sales people'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:SalesTeam:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DB22EC4-0283-434D-A157-107FD8361FAC}' />
    </window>
    <window class='worksheet' name='Tree Map Top Selling Items'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.086db161b3fty012f8rgb1e2j1sk].[none:Calculation_2005790727146389516:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.086db161b3fty012f8rgb1e2j1sk].[sum:Calculation_668221637543665667:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[none:Category:nk]</field>
            <field>[federated.086db161b3fty012f8rgb1e2j1sk].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{405061EB-4B6F-4C50-8981-D2004B945AFD}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Box Plots Gross Profit by Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Histogram Household Income'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sales by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by sales channels'>
          <highlight field='[federated.086db161b3fty012f8rgb1e2j1sk].[Sales Channel (group)]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='36' />
      <simple-id uuid='{196A29AF-DE2F-47E2-9C09-AAAA79DDC6C2}' />
    </window>
    <window class='dashboard' name='Dashboard 2 (2)'>
      <viewpoints>
        <viewpoint name='Top Selling Online'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top selling by stores'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Tree Map Top Selling Items'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{B73C2C22-CFB6-4BF5-9CB1-E67E942DC5E6}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{15B6A277-3B9A-452B-9119-BC6DCE362E7E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg sales and profit by Discount' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASQklEQVR4nO3dW1McSXrG8X9WVlUf6QaEEDqMpJnxxM6EN3wIfwDf+UP7xhd2eMPhdWzY
      c5QYDUICcWqaPndXVR58Ud0SsytmgQZEU+8vRtHQQJED75NZmZVdKO+9R4iCCj51A4T4lMLZ
      G8PhEGPMlRw0SRJKpdKVHEuI66Su4xSo2+3SbDav+rBCXDk5BRKFJgEQhSYBEIUmARCFJgEQ
      hSYBEIUmARCFJgEQhSYBEIUW/vVP+UuDXhtVaqDSAS6qEWLxzhBXamilrrqNQlybSwXA+oSk
      m1KKDel4SK+zjyrV+fxpDefcVbdRiGtzqVOgcrmMtZZKpYx1jiDQOGuvum1CXLtLjQBHe8ck
      vow9SJmYkMdPnqK8xXnQgUwrxOKQ3aCi0KS7FoV2qVOgReO9x3nop5YwUNSiACWrVYI7GADv
      PdbDMHP0EksvsQxSh/WeehSQWk8YKB43Iu5VQgIJQqEtdABmPfvY5MXenRa7cZ5KGLBU0qzX
      Qr5c0cRaESiF955e4tjqJvxykvJ8OWa9GsqIUBCzKe9s4rtQk2Dr/Pti76WOfmIxzlMKA5ol
      TaMUUI80leh8U5t+YnnTSxmklof1mIf1iEhLEBbJrBM0Lh/5rfNks3/Wk9r8bTN9P3Me78F5
      j+eWBsBPG5cYT2d6GtNPLInNe/ZGKaBR0izFec+ug8sXrfeexHq2uymtkeHRUsSTpZgwQEaF
      W2BWC6n1eR2kjmFmMRYy58gcBAq0UugAwkARzf5pRazVr56LtUIpCJQiULc0AD+1JnQmhjBQ
      LJU0jVizVAquffKaWsduP2N/kLFSDnnajKmeczQRV2M2yvdTN52/2ffztqU4H+VrsSYMeF/U
      89TErQxAZj1KgVafphc2zrM3yNjppTRKmufTIMiIcHVmpy4T4+hOe/ZBakmMpxwG1OLZKB9Q
      DoNrq4VbGYDbwnlPa2TY7qaEgeJZM2alrCUIl5DZD/O3fmoZpg7jPXHw4ZS2Hmsq4Xw9+kVJ
      AM7Bec/JxPK6kwDwtBnLEuoZZsvQoyzv2U8vQ1fDgHqcL1jUr2D+dhUuFYDjw12i2jqT7h6J
      qrCyVMGalHpzBa3UnQvAaf3E8rqbMkwtnzVjNmrRJ/8lfire56ssw8wxSN37nt0xW6zI52/1
      OKAU3s651KUCMJm06fVKJJMWOOh1j6msPuLzJw9wztHv91leXr6O9t4K3ue/9Le9lM7E8rAe
      8WgpmntCdlvNVmKM8/Sny8/9acEroBZNi72kqUUB0fSayyK41IWwbvuYVqdMHAywqsTy2gMm
      k1G+G1Tf/XNkpRT1WPPNWoXUOnZ6GX98NyIM1HTyni/J6UARnlqe+7Bcp9Aqf04rRRDkm7KC
      6fOK/Gs+VRG56dLwKHX00nwJemzy13nU43z5+bNGRDUqEevb2bOf16VGgOGgh/OaUqzxShPq
      APAEQV78d/kU6CzWeex0ZcOeuihjvMe6vPf88LH848Z57Oz56de66UUa5/OrlXq6Zq3Vh4C8
      D9ipMJ0OnVaKcBqgcPbxQDGL0yxXivx7JNbTn11vSR2jzBEFinqcX01vlDTVMLiT10YuNQLU
      6o2rbsfC04FCc7XFMZtQummInP8QLDsNzemwpQasyyecZvr5ecjyz4W86PMaVtMAeAKVr7Ev
      xQHrtYhqFBAWZF6z0HuB7jqlFOG0WNHzHWt2Hu+nI4ufPjcbXe5az35eEoCCUGp6CvSrOi9m
      0Z+22DMYIeYkARCFJgEQhSYBEIUmARCFJgEQhSYBEIUmARCFNseFMMeL777FlxosL1VJkwmP
      nz6Vu0OLhTLHCKCoVit0T7q0DnbIVEwAWGu5htfYCHEt5hgBFDoMefBwg2a9jMkSrIewANuh
      xd0x116gR0+/uKp2CPFJyCRYFJoEQBSaBEAUmgRAFJoEQBSaBEAUmgRAFJoEQBSaBEAUmgRA
      FNpcWyGyZIJVmujP7gwnxKKYKwA///wCG1RYadRJ04Rnz5/LnWbEQpnjFMijCXAOOq19XFAC
      ZDu0WCxzjQD1pSohVe6vPMLZDCfbocWCmev1AI+efnl1LRHiE5BVIFFoEgBRaBIAUWgSAFFo
      EgBRaBIAUWgSAFFoEgBRaBIAUWgSAFFoc2yF8LzdeoUJKjzcuI/yhqhU+WR/3VyIy5hrBHj4
      5DPwhv2dt+zuH6MA59wVNU2I6zfX3aGTYY/G6jrGpDjZAS0W0FzboVVcZbVaoRp9jvcG50EH
      Mq0Qi2OuAFSrNQAqlfKVNEaImybdtSg0CYAoNAmAKDQJgCi0MwLgOdrb4Q9/+B/szbZHiBt1
      5giw9f13DAYZ5iZbI8QNO3MZNI6rrFSaco4k7rQz69ukCVuv38qd3sSd9tER4O3mj4ziEg82
      ysgOB3GXfXQE+Oyrb4j6PQ4PT266PULcqI8GwHt49OUzypH+zS/uHu+zvXvAcDii3+tg5Z6g
      YsF8NAA/ffsDJktwBL95CrS1tYXWmjevXnLUGRMgN8cVi+WjAaiWPe/Gmt9/8+w3V4GWmiv0
      j4+orazhszEeCIJAbo4rFobyv9Fdd/daVB6uEZ/x8XQyZGIU1XKM9w4dRgRK0e12aTab19Rk
      Ia7OGdcBPO2jA7qTCffHDeLKxyMQl2tnhkOIRXDmGc6Lb39g64eX/OlPP91ke4S4UWcGIA4M
      Sa3B7//285tsjxA36swANO6t0t7dp9Zcusn2CHGjPhoAZw0qKvN4475shRB32kcD8Kf/+Df+
      +O33hGp5vhcNC3HLfbS+/+mf/4W/T0Z8990mBohuuFFC3JTfvA5wWXIdQCwK2e4vCk0CIApN
      AiAKba5Fnpc/fEtQW6VRjknSMY+efIaWjXBigcw1AuhQY9KMo703ZD6S7dBi4cwVgFIcgYKN
      p19Qi8F60FrLdmixMGQZVBSaTIJFoUkARKFJAEShSQBEoUkARKFJAEShSQBEoUkARKFJAESh
      SQBEoc21G9R7j/d+uvfHA0r2AYmFMlcA+u19Nt90eLjeJEkTnj1/fmvvImGdI0ktoQ6I/8pd
      r0VxXD4A3vD9j5tkLqKtxlRWNoDr3Q6djzjgvMd5T5pZesOE7nBCf5TSHyUMJ9n0uYThOGU4
      SRmOM8apIQoDjHWsr9T46vEqv/9inc8frlAt5/c0FcUxq6U5d4N6To476CjEmpSl5VXCYP6b
      4/70psXuUY/OIKE/ShiMU/qjlN4owTmPsQ7rHDoIWKrGLNfL1CoxzWqJaiWiWSvRqJVZqsTU
      yhG16aNSCuscO4c9Xr495qc3LX7ePaFWjni+sczvnq7x1ZNVHqzU0FqmR7eFc57MWFJjSVJL
      Zi2pcaSZITOOSWpIjc0fs/wxyQxZ5phkhiS1JJkhSQ2pcSSZwVqH8/52bof+1/9+RXcwoVkv
      UyvHNOslliox9WqJaHoKE+ngSorUWEd/lPDi7TGbb4/Z3GnTGUx4st7g66drfP10jWcbTeJQ
      XudwHrOe1U9HaQ+YadGNJhnjxDBKMsZJNn2cPZ8xmGRMkny0TjPLaJKRZJbMWKJQE4cBpTgk
      0gFRpCmFOn+MQuJIU45DStP3y7EmCjWlSBOHmkopIpp+fTkK0Vqhg+B2BuBTSzLD1l6HzbfH
      /LjdYrfVp1Er8bvP7vHVk3v8zeMVVhuVOxkI7z2ZcdPeNu9Zk8wySQzjJGM4yQt0PC3icWIY
      TlJGiWE8yZikBuc91nnc9J/HU4kjKuWQaimiHIfUyhGVckQljvK3SyG1SkwlDvNCjvPPnRX2
      dZEAnEOaWdq9MS93jvlx+4jX+12S1PB8Y5mvn63xzbP7bKzW3gci/4n6U2+DxzP9D+sc1uY9
      pLHu/Wkd5OGbfc/Tj9l0yP6L543FeTDW5oVnPdY5MuPeF6K1Li9s67DWYZzHOYd1niyzTDLL
      OMnenyqEOiAK9ftetDwtykopL9Tq7HFWwJWISinKi7sUogNFGASEYYAOAsJbfDopAbik/ihh
      c6fN5s4xP705pjuYoHXwfgHA+18X/ennQ60IgoBAKaIw/4s60bRI4kgTBKffz3u/SAeoQFEK
      NSiIw3wl6/3XTx/zglNEWqMUaB0QBgE6UGj9Z49BfjoZh5pqKaIU58V+F0e2s0gArkiSGozz
      KAWBUihAKYVSHx4DJddJbhu59+0VKcUhpU/dCHFht/fkTIgbIAEQhSYBEIUmARCFJgEQhTbX
      KtC7N7+QqCpry3WsTVlqrsjNccVCme/eoOUSo9GIt7+8pN1P5ea4YuHMEQBHljlMMqGx9gCf
      jnByc1yxYOY4BVIsr95jee0BUagBTyB1LxbMXAEoV6pX1xIhPgFZBRKFJgEQhSYBEIUmARCF
      JgEQhSYBEIUmARCFJgEQhSYBEIUmARCFNtd26N3tVwyykPV7TUyWsHp/XbZDi4Uy1wiwdv8B
      tWqJvTevGCRetkOLhTNXAH78/v8YjhJWHjwhsBOsbIcWC0ZujCUKTSbBotAkAKLQJACi0CQA
      otAkAKLQJACi0CQAotAkAKLQJACi0CQAotAkAKLQ5toOffBuG1VaRbmENJmw8fixbIcWC2XO
      7dDrKGs52t0m8Vq2Q4uFM98LYt685nigePLkOSbNt0OHsh1aLBDZDi0KTSbBotAkAKLQJACi
      0CQAotAkAKLQJACi0CQAotAkAKLQ5roSvPd2i0RVWG3UMCahuXJP9gKJhTLHCOCxaEKb8XZr
      k+7QEEjxiwUz198JHvU7pKrCytoGyWSIcx4tfy1bLJC59gI55/KDnOr5lVKyF0gsjPcjwHA4
      xBhzJQcdDodnfsw5RxDMP/eW4/y2Wb92FTtzb9v/21Ue530AarXa3Ac87awRwFqL1nru48tx
      fptzDqXUlQTgKtrkvcc5d6t+Rtba+VaBLuMqGi7H+euuooecuYo2KaVu3c9Ia3391wG8s7za
      fMlwkuG9Y/uXTXrDhMnghFbn7FOlj9l7u8XRSR+Ao7037B916B4fsL17cP72eM/O9i+0e/n3
      3t99zWG7x/7OFruHxxdqT/toj539FgCjXpt2b8ig02LrzTsuMrNqHezw7rANwKDb4qQ/pnt8
      wObrnQu1Z9Q/4dXrHbyHdDLkoJUf893ODu4Cx7HZhBcvNzHO40zG7t4+eMfWzy/pj9NzHydL
      RrzYfIX1YE3Cu/3D/NgvXjBKzn+6/asacpbtVy9pdfq82fqZzmB8geMYNl++ZJwanDVs/fzi
      +gMwbLdorj/g6LBFOukTV9c4PtrjoH1A/3h0gSMZMhsx6LTxPmOUhIyHJ7zeek0Ynn8g8zaB
      oEL3+Bh8QpKVGfaOOTnp0u10L9Aex2BoMOMhDtBRyGSc0O4MCTEYd96Ss4zGnnTYxwNRpBlP
      Usr1BoHLLtAeaB33qMUwTg0qCMmyhPHghL13J9gLHKd9cMSjRyu8OxgAYKxjeLRLa5hdaKm7
      fdji0YM6+0cj8ApjDUnvhHGa0L1A4Z6uIYB799fpnxwSVpqctI7OfZz+4QH3Hm1weJB3DGv3
      168/AGGo6bTbKK2wFga9NulkROuow2G7fYEjKSbjAcZDllmyZEhmHPXGMp2jo/P/glXAaNTD
      AalxpJMexlpUEONMxvk7boXJxkyyDJNmmCyl0+1ibcZwnFygUBRZOiYxhizNyNKETqfH3ttt
      yrXGBdoDeEN/OMZZi7WGXqfL3rsD+r0W/eHk3IcJNbRaJ+hIYaxl2O+SOFhu1tjbO3/BBQEc
      H3cJNFjnGPS69Poj6ks1JhcYScLoQw0lkwmv37xjeXmFYb+L5/yBDCNNu9UmCAOS8Yjt3YOb
      eEmkp3NyQr3RxFpPMupTWWoSachSRxSfv/ce9rvoUg3lHc5M8LpM6DPGRtFcqp7zKJ5Br0tU
      qYNz2GyMiqq4ZIjTZZZq5XO3JxkPSb0m1gHpZMhwYlhdrjNOHY2l2rl/NZNRH6tiwkCRjPuM
      Ek+lpBinngfra+c+js0S+uOMainGmoRuf8TKvTUC7wjj6NzH8c5y0u3RXKpjjOGk06XeWMFM
      BtQaK0Th+fpN7wwn3QGNpRo2yzjp9lhqLjMeDFheXSXU5+1/P9SQyTJ6nQ5xbYnApZRrTeJz
      tgc8J+0TGs0GWWrodjvymmBRbLIZThSaBEAU2o1fBxDiJnz/v/9JexDyD3/3DV6XaFTjj36e
      BEDcSf004R+f1/n3716xUQ056Y/YaEa4qEqvdUi1ucpS/Z4EQNxNw5Mj/ut4xIPHTxilhl9+
      +hb75RdsrEd0hyMyo9jbfierQOJuOm9Zywgg7qTzbgL8f2ucpYs1CVBdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Box Plots Gross Profit by Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2 (2)' width='192'>
      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
      AG8gRPVwn36nhccXwOsP4tgOzWqJVq1Es1qi12kRTaTxh4/vOfTEAJbnMqiqwlR6DEPX0HUV
      l6FhGBohv5d0LMRUeoxcKkqnN6DaeHCZkS+92FX7d1W4fwvbMqkfHVA+2KS8v4nu9oAD/U6L
      RukQ3XCBY2ObJq3qEeX9Tfrd0V8+Hdy7gW2aNMpFmtUSutuNqmqYwwHFnQ2Odu/jC4bpd1pY
      5hBzOCAQiTHsjTaA3Tur2JZJo3JE7SiPxx/A7Quwv3GLTqNGtbiPbrhQNR3D7UHTdBzHxusP
      HtuM37gGUFUFTVUZmo/e1fO4dHoD85HtL5OH1wC2ZeI4DppufO1xjuNgDvoYbs8oxnyir64B
      vmnGQb+Ly/3yLIC/ugZwHBtzMHj83L3uyBfu3/h2jG072I/9sgsv/ZP/cVTt8YerKMpL9+R/
      2DfN+DI9+R+mKOqT534J3rWSd4IlockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACSh
      yQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockA
      JKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACSh
      yQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockA
      JKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACShyQAkockAJKHJACSh
      yQAkockAJKHJACShyQAkockAJKHJACShyQAkoSmO4zhf3fD+eoVSazCqeUYuEXRhq9qoxxiZ
      RMBFe2iPeoxjoz+84ag14KDeH8UsLwVFUbB159sf+APlMTTqA3ECkJdAktAeOQMAOI7D7t0b
      gEMwEqfXbTHoddE0nbHxCdr1KuF4irtXPiQ7e4pGpUhiYobK4R6a4cLrD6KqKrXSIbmFZRRF
      OebD+v6GgwGfvPcbdMMgEksyOX+SytEh+a0N5pZXaDfqxNNZ3v/Nf+PCW+/Q67TxhyJUi3l6
      3TYnV95E1V7dS6nrn1yi224xd+Y8w0GfbruFZZokMxPcvPwJi2dXaDXqGC43hssFwPa9NaYX
      T9HrtFEUhW67RTSepFTIk5mcQdN1bnz+MdOLJ2nVaiQyWZr1Gv1ul+mFkyM5Tu3dd99996sb
      bh+2aPUt6qUCqq7TbdYxhwMqhX0a5SLNahnLGuINhhn0e9SO8tSPDjna38IbCIPisHNnleGg
      T71cJJbJoenGSA7uuwh5dBxVxbYs9jfvEUtl8Hh9bN25gWPbhGMJauUig36XZHYSRVFoVEqU
      Dg8YDHpE4ykURUFRVTw+/6gP55mFPDp9y6HX7eD2elm7+jnDwYBOs0m72aBeKRNPZaiWigx6
      PYaDPo1qBd0wSGVz7G7cpdft4DgOlmVSK5XQDYO1q58zGAxwe7z0e132N+/RqtcIhMIUD/bI
      TM2M5HgfewYASE6eQFVVbMumUthn6bW3KO5tEc9O0m028IcieAMhEtkp6qUC4XgKl8cHCvhD
      Y1jmEI8vgOHyHOfxPDe6rvP6z36Foig4jkM8naVeKePyeIjGU7TqNTRNJzszh6Yb7K6vEU2k
      MIdD0tNzaK/wqz+Ax+vD5XZz8e1fUCuXMIcDEukJFFWh3WwSiSdo1Ws0ahWyM7NEYgnu315l
      auEU7WadWDINOHTaLbbvrfHGz3/Fwc4msWQayxyC4zBxYh6A4XB0b7o88i7Qf796KPQieCLi
      wdaf+LrwgzcRdgu1CH7iGmBv/SaObZM5cZLbn/4dk4tn2br9BYnsNJ1mndmzF1m/9gn+cJTy
      wQ7xzBS10iEnzryG2/vqnfofZpkmty5/xHhu+sGaaH2NaGKcXqeFA8RSGeLpLDc+/oD09An2
      798jPJag3axz9s2fjnr87y2/s4miqCTSWa5/colwLE7p8IBAOMKw32f59Z+wfvMa3W4Hx7IY
      S46T39ni5MrrhCJjox7/qT32XSBFUfD6Q4TGknRbDSbmz3D7099R3N3EMk3K+V0ADJeb8sEO
      mm4w7PewhgPqpcKxHsCLomoqwXCUQCRKu1EnMz1Hv9vG4wug6watepVuq0m33WQ4GGCaQ3q9
      Dr1um4dOqq+k+HgGy7JQVBXd5aJWOiKWHEdBebAmaLfo97r0Ox0Ml5uD7U10w6DdqI969Gfy
      xDNA7SiPLxjBcLmoFPY5//af0us0wXHIzC5R3NnAcLlJzyxSLewTiMTodVrEs9PHfAgvxrDf
      p1oqYFkmkViCw71t4qkMnXYT3eXC0A1ajRqReAprOMTnDxKJJdB+IDfRCns7lIuH2JaJYbiY
      mJnHsS08/gD3Vr+geLBLKBrD7fECcOLkGQ53t/D6AyOe/NnINcBD5BpArDWAvBEmCU0GIAlN
      BiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYg
      CU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlN
      BiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYgCU0GIAlNBiAJTQYg
      CU0GIAlNBiAJTQYgCU1/eMNUzE/I5xrFLC+FMZ+BrYr7uhB0aaiqNeoxjs0jAbRNm8bQGcUs
      LwW3adOzxT1+gGpPnADEfamTJB5zBviDG59eQjdcLF24+K07KeX3CEbG2Nu4g8vjJTe39Mhj
      KsU8zVqFqYXTX24b9HsU93dIZacw3O7veAgvxnAwoHiwS6tew+31oWka1dIRkVgcTddxe7zc
      vX6FcCyBLxBkPDdFfnuTcvGQhbMXCEdjoz6E72X73hqqpqGqKgoKbp8Px7a5c+0yF976GcN+
      D1XVONzdIjM9S6fVpFmrMrN0GkVRRj3+U3tiAP1eF03X+fW/+zfMLJ0hnp7gi0t/y/zyCr1u
      B8Nw4fJ4WF/9gnh6gpV/8AtQVbInFvjr//hvSWQniY9nuHrpt/zxP/5z8jubdFtNaqUjbNti
      0OviDYQY9Lo0qmVufPIBi+dfB6DX6WCaQzrNBo5jc/4nPyM5MXVsf5Q/WL9xDU3XicaT9Lod
      ktkcq59+SGpiiqn5JaYWTmG4XHz+u//D9t1bXHz7l1imSaV4+MoHUK+UKBfyjCXHKR7skcrm
      MFwuktkcGzevUa9WCEXHONjaoFoqEk2k2N24S2piEn8wNOrxn9oTA5g7c4FQNIZlmkTjKcYn
      Z+h12oTG4vQ6bZLZSRzbRlE1vL4AhsuF1+dnb+MO82d/hD8YIje3yHAwIBCOMr3oA2B3fY3Y
      eIaDzXVSE5NYpomiqCyt/JiphVPgOBT2ttFdLhzbBsDt9R3PX+MrNF3nx3/yD7FMk+LBHrOn
      like7HFq5Q1C0TGC4Qh22EbTdBbP/YhEJkthf5fc7MKxz/oiLCyvwFlo1WvEUmniqTTD4YBy
      4ZDUxCQ4YLhcD85+E1N4fX5s28Yzgv9X34fiOM7XVny/26xT6pijmmfkEn6dnv3qnMKft6hH
      E2oR/NgzgOM4bK2tYrg9ZGfmWP34A3Jzi+ysrzE5d5JKMc/s6fNs3LqGPximViqQSOfY37rH
      4vmLuD3e4z6O586yLG589nvO/fiP2d/aoLC/QyAUptfp4AsESWZz6IaLW5c/JppIsb+1wWtv
      /Zwbn/2eN37+q1GP/73ldzZRFJVEOsv1Ty4xlkyR390mmc5Sq5RYvvhHbK7dxDAMmo06seQ4
      +Z1NZhZPE0ulRz3+U3viu0BjqQyqqtKoVsjOzHH1w//LxIkFVj/5gH6vi+M4tGoV2o0aR/u7
      KKrCcNBnOOgf5/wvjKZpRGIJAFxuD9VSkUa1QrfdJpGZwBoO0XUdeHDc6dw0Nz7/iKPDAyzr
      1X8FjY9nsCwLRVXRXS7yO1toqsZwMKBZq9JuNNANg1q5RK10RL1SQlU1Cvs7ox79mTxxDbC+
      eoVUbppuu8nu+h2mFk5x/9Z1TpxcpnS4Tym/RyAcxbZtQmNxyoU8huHCHA6Oc/4XxjJNivu7
      dDstxhLjpHPTBCNjtBt1Dne3cRybQKuJ4XKRO7GAORwwf+Y8pUIeTdNGPf73VtjboVw8xLZM
      DMPFiaUz5Hc2CY/FGQ4HNGoVdMMgGIkSio7h9vqwTJPpxdPfvvOXyDeuASzLxLZsDNfX7ww7
      jsOg18PtffUvdR4m1wByDfAlTdN53IuZoig/yCe/JB55J1gSmgxAEpoMQBKaDEASmgxAEpoM
      QBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEpoMQBKaDEASmgxAEtr/Azv4Qk5f
      rFloAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Histogram Household Income' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='59' name='KPI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Order Size by Price' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales Goals Stacked Bar Chart ' width='192'>
      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
      /w/mv/0mm1Vv9QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by Region Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by State' width='192'>
      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
      09CYNfx/GEMA23RtgmwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by median income' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='Sales by sales channels' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACfCAYAAACvBNYlAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPUUlEQVR4nO3df1xUdb7H8VcDCCoOSCiZKL/ERGCRx1i4bdLUVmA//bGLsg8fj82s0Lab
      eN1YH3Z3u979ZW6ke283GxVXVx9OeTNdud0gdZm4t9Zu60UyHdIAf0YIIo4wwjgc7x+jMgjk
      j5phhu/n+Z9nzjl8j4/v+3y/8+NzvrdcvHjxIkIoStfXDRCiL0kAhNIkAEJpEgChNAmAUJoE
      QChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkS
      AKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgAPs9vtfd0E8Q0kAEJpEgChtMC+boAK
      Nm7c2NdNEL2QEUAoTQIglOaBKZAVc95KLAAEETrKwGOzc8iMHeydtFnNmMklN8kbf0z4O8/0
      SWM+JpMJk2klv3lmIqc2LeOdQ+1XXraa8zBbr3USK+Zr73QD57uWRixmC43f9jTCr3j4phzI
      wKhUchZN51zx3650rqRc03d6h/6uzyfU4Z1PgQamMSlqFdUtRiJDwWpeTv2DBRgjQTv1CRve
      2MyeujaCQkdxz5x8ZgUUk7fSAoDFApBA7m8LMEZaMZth5g9trmPumIcpN6nL+QAa9m3l1bVl
      HG4JYMSkaTw1y8jogdBoWc7OqILOsFjNLK9/kIKUz1n+kplqAIsZAGO+idwkjeYD21i7rozD
      LRCaeB9PPT2N5HAdrhGqe1uEf/HSx6A6dAGtnG8DQru+8qXlQ0Y8U4hpZCCao5nT9iAIz8Vk
      moDZDLlXd6pz+3jn7QAmvlDInIhemh+ZwbOvzECvc3DyozWsfX8Uv5ye0HvzIo0UmFKwmD8n
      JddI5OXtjeUUlQxi+ssrideDrWYna4rKiVp0aZ/raYvwaV76FEhD6xjMwJDur8RMiOWj15bx
      xqZiyr+wM0gf/M2nah7CpKdzSP2GDjcsOhp9IKAbwMjJU7nrzHGabqLVTda9RGVnEa8PBALR
      x2eRHbUX6+WTXUdbhG/zTgDOV7KnPpmE0O4vBY/NYenv88iecDt8sYVlf66kvftunUYlMHrg
      Dfxtrc018njCjbZF+BwPB0DD0bCfLYXvMuSx73dOLdw0VlfR0DGU+BQDmVOy+R42Wi+/eLia
      Y05Ac+LUrv+vOtodaABOG1U7zNQmpxAJ6AICOHeuFQ0NR3MNlg8rux74VTVHWzXAidMJEUkG
      6ktKqbE5ASe2mlJK6g0kRdzwf4TwUZ4Zuy0rybNA5/cAi8mM7XlqM8BxgKKlq6g600ZQaCqP
      L5iLq3/FM2nie/wxv5iWgFTmvPw8k66n4wUMo6HsVyxcdYa2kKGMe+Ap5mW6ohcx8WFufWUJ
      84s6CE28mxnj4t0OjCTlXh2vL5nP6o5QpuQXMnVMJnOzt7F2ab7bm+CsHoMs/NMtFy9evNjX
      jejP7HY7W7du7etmiF7ITyGE0iQAQmkyBfIwu93OoEGD+roZohcyAgilSQCE0iQAQmkSAKE0
      +RGLFzyx5K2+boLohYwAQmkSAKE0350C3XRtr0brofdYvW4XVWfaCBk6jozHZzDt7tHIDzfF
      1Xw3ADfr7B7WFwcy7ZcriB2sw2k7QWVJFccZzVig0WLm85TcK9VjQm39LwD1J2hNNxI72DW7
      C9RHY8iJ7uNGCV/lJwFoxLKpDC2sgY8tBzneEsCIh+bxixlJ3ac1MROI3biaP+t+RFbGGKIG
      BnaeY/lLmF2Fv5jB9fSK3CS05gNsW7uOMtdvnrnvqaeZlhyODrC6Cn+xbXiDzXvuYJ4pl6Tz
      x7C8tY5te+roCB3F3bOfZ1Z6uLyh8kN+EgDg7DFsSTN54ZXn0PM1O18r4whJdHuLEDyWHy1+
      ioqSt1mxuJoLoy4XskdiLDCR0m0K1Eh5UQmDpr/MSlfhLzvXFFEetejSPufY987bBEx8gcI5
      EQSiUW35iEGPLmHFnAHonDb2vbWVTxPnkNFDxZvwbf4TgAgD9xii0QNwG9GjXJsbLct5yXVb
      v/QkB9ANvh3DjIUYpjloPvIxb725g0EFU4nr6RbdZGVvVDYL4/WuO7g+nqzsKFZYmzBOjgCa
      GTLpH3j0Su3jUfbvtvD+dgtFbqcxGuaQIQ+F8Dv+E4BeRBoLMBl7eVE3gPB4I9Pv2sTBJoi7
      qTe+o0joUvh7Acfwmfz61fsZfjOnEz6l/01bvyxj6/56Wh0aoOFo3s/uMidDh1ze4Suqj7ai
      AU5X4S+G+hJKa2w4AaethtKSegy9Fv7GcMfwD/iP/z6Jw1V4zPn6/VjrPH9p4rvn9yNAN8NH
      c+t/bubXa6s403apJvmZWaRdKkmOTLkX3etLmL+6g9Ap+RROHUPm3Gy2rV1Kvtub4KxeR4tg
      0mY+w7E3/40XN52hLSiUUeONzJid6q0rFN8hKYjxMLvdTu5vdvR1M0Qv+t8USIgbIAEQSpMp
      kIdJTbBvkxFAKE0CIJQmARBK63/fA/ggKYn0XTICCKVJAITS/H4KpLUeYteGzbxXWXflcejP
      PjKWwdcR7W5rhgnl+PcIoJ2k9I9baJ78M/6wyoSpcAlTOrawbEctN7CexiVWzHlmvvVqq8Kv
      +HUAtC/KqZg4l5zUYQzQAYF6xk2dxw+rP2T/N66z1JMkck253QtsRL/m11OguiPnmGQYcdXW
      SMan2/j4K0iLA6t5NdUxoRze8QlVZzoITZ3JL56bzPBu0bdiXl7PgwWuFSC/8Tgpiew3/DoA
      tuZmdD30Op3OfWG8OhocM5n9L7MYFnie/ZvXc7BpMsOvWRzT23FSEtmf+HUA9OHh1PUw2de0
      ELclWccyyTiOYQAMZkR0BKev6+y9HSclkf2JXwdgROwQNuyr4/6H3KdBjRys0BP3A0/9VSmJ
      7E/8etqquyOT9L8XsWV/g6s80Wmjavub7E64l9RrrLd986Qksj/x6xEA3UiyFuSwa8O/8+Lr
      nd8DLH4kzoPJlpLI/kTqATxMSiJ9m19PgYT4tiQAQmkyBfIwKYn0bTICCKVJAITSJABCaRIA
      oTT//iLMT2zcuLGvmyB6ISOAUJoEQCjN4wHQrGYKLY1uW9qpKMrj59tru+xXu30tH58FGi2Y
      u+x/vayYl1u4mSOvrRHLcimX7I88HgBd/DjCq4/TWaF4lMMBWdx9qpZTV7adovbUSGLCPN0a
      Ibry/BQoeBQJbUf56vK/T1ZzLjaT9OFHqW25tK2llkPhCYz0eGOE6MoLnwJFEjPyGLWnIG44
      NNXUc3tiJLefuoU9xzUyknRox2sISZx+5YiOhs8ofqOcXZV1tIXE8UT+Qh6OCwY0mg9sY+26
      MlyLuVxeAbJ7jt2XPg0YOoFHnnuSh0YPBO0Un2x4g8176lw/Zb5nDvmzUgilhS+2reFPlirO
      tEHIiEn85LmfktG9eFhqgvsRr3wMGpMYwX/VtnD/8CCOVgcT+wMIDkuibddRSIqj7oid2Ds7
      K1jOHrORNPMfKXxOD1/v5LWyGh6OS4LGcopKBjH95ZW4VjTdyZqicqIWuQrZO51lz19rSX/2
      FWboA9EcJ9m9ppTan00l7ksLH454hkLTSAI1B82n7QQBEERExk94+bEoBgaC0/Y3NpR8SUbO
      2KuuRmqC+xOvBEAXk0hA8XG0jAAOM44ndEBoNLedPkwjYdQcvZWYKZ37RxjuwRDtWhCV26K5
      tCIqTda9RGUvJF7vutfq47PIjlqBtcnIZPc17VqqqCgt5rPSYreNCeQ2QlzMBGI3vsaymnTS
      xqdhuDOZcACCuPj1bt7810+oOnOpoj4hlycYe1W4pCa4P/HOF2Gh0cQ0fEbdSTgXeyeue/1I
      EoYUU90YxqHQRL7TEl6Hg7bJL7BqdnIP05Kx5Cz9PQ1HDnHsWBVblu3lvn96krTWj3i3Yozr
      KRADdFx+TEp3UhPcn3hp2jqScaOPsmePa/5/WUxiCDX/U4suMea6GhKRZKC+pJQamxNwYqsp
      paTeQLcVTSPGkFrzDturXEufojlorjngetPdWE1VQwdD41MwZE4h+3tgawWcF9ANiyQsUIfm
      aObE3n0c6rEVUhPcn3jtpxC3xwSxrCiY/Gmd24JjEvjqzZ2M/9X03g90F5nJ3OxtrF2a7/Ym
      OIvuj/gZwQPzstmwein5x1u4EDKUcRnTyJkBaA4OFC1lVZWrnjf18QXMjQD4PpMvvMKL8+vo
      CE3kvifvIrbHByxKTXB/IgUxHma329m6dWtfN0P0Qj65E0qTAAilyRTIw6Qm2LfJCCCUJgUx
      XmC32/u6CaIXEgAvkCmQiy9OB2UKJJQmARBKkwAIpUkAhNLkewChNBkBhNIkAEJpEgChNAmA
      UJoEQChNAuBFWnMFm/95AXl5z7Po1WKqz3e+ZjXnkffzd6m+ugitvZL1z+eRZ/b959I5m/az
      dcViFuTlkbdgMas+OMblS/TV65MAeE0j5UV/ZeiTv2OVaSUv3Xea9W9Xuj0xz0juo3VU1nbt
      Ie1VFbQ9MIUEbzf3hh3iL6utxP54CYUmE6v+sAjD8T9ReuUJmL55fRIAbzn5Kf8bN5Ws2MHo
      CCTCMI0ptr9zsDMBRKUkU1dZ61aJ3E5VRRvpaeF90OAbNYZpBTkYovUEAroBw5g4KYHzbZ17
      +OL1SQC8xdbMrXHRbv/hYYxJCeTMWbd9IlNIrqvkyk2yvYqKtnSSh3i1pTdJh869N50/RunH
      AzHEu23zweuTAHjJBUcbg0KCu2zT6eqpP+2+JZL09KYr04T2qgrImIB/PXBOo/XIB6xaX0Xy
      7BmM7XLJvnd9EgAvCRoQgr2tvcs2TYsi6tau+4Ulj6epshYNjZqDkDa+a2h8m5OvLRvYcmQc
      T85/iNEDu+/ha9cnAfAWfTina0+4zX/P8uXnToZe/Uj4sGTGN1VS6/yCfe1p+FP/P/vJZsqH
      5fBT42h66PsuPnZ9EgBvGXknd9Vup/RIKxpOmvZu4339xB46QBjJ45v4vx17aU8bj//0/1rK
      9o8hK3nwNTqVb12flER6TSSZc+/nrZVLmF/XQWjq4yyYm9ZjBwhLHk/d5kPcW9jX3eMGNJ2g
      +tNNvP/phi6bE3J/S4Gx67P7fOn65OfQQmkyBRJKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChN
      AiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0
      CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUNr/AyUymRcwv9l1AAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sales by sales people' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Scatter Category Vs Income' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      Zl42/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Selling Online' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top selling by stores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tree Map Top Selling Items' width='192'>
      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
      /wOB/+aofYomTAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
